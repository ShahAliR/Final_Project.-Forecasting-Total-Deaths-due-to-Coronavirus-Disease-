<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.20.0221.0754                               -->
<workbook original-version='18.1' source-build='2019.4.4 (20194.20.0221.0754)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='covid_ih_countries (2)' inline='true' name='federated.1ng02180pziljf1ay22hp1627wru' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_ih_countries' name='textscan.04e7bpp1rxzb9g1g196xz13in01o'>
            <connection class='textscan' directory='C:/Users/Yuga 14/Desktop/final project/crona' filename='covid_ih_countries.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.04e7bpp1rxzb9g1g196xz13in01o' name='covid_ih_countries.csv' table='[covid_ih_countries#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='country' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='total_deaths' ordinal='6' />
            <column datatype='real' name='new_deaths' ordinal='7' />
            <column datatype='real' name='total_cases_per_million' ordinal='8' />
            <column datatype='real' name='new_cases_per_million' ordinal='9' />
            <column datatype='real' name='total_deaths_per_million' ordinal='10' />
            <column datatype='real' name='new_deaths_per_million' ordinal='11' />
            <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='stringency_index' ordinal='13' />
            <column datatype='real' name='population_density' ordinal='14' />
            <column datatype='real' name='median_age' ordinal='15' />
            <column datatype='real' name='aged_65_older' ordinal='16' />
            <column datatype='real' name='aged_70_older' ordinal='17' />
            <column datatype='real' name='gdp_per_capita' ordinal='18' />
            <column datatype='real' name='extreme_poverty' ordinal='19' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='20' />
            <column datatype='real' name='diabetes_prevalence' ordinal='21' />
            <column datatype='real' name='female_smokers' ordinal='22' />
            <column datatype='real' name='male_smokers' ordinal='23' />
            <column datatype='real' name='handwashing_facilities' ordinal='24' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='25' />
            <column datatype='real' name='life_expectancy' ordinal='26' />
            <column datatype='real' name='human_development_index' ordinal='27' />
            <column datatype='real' name='population' ordinal='28' />
            <column datatype='integer' name='cid' ordinal='29' />
            <column datatype='boolean' name='Black_days' ordinal='30' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cid]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>cid</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Black_days</remote-name>
            <remote-type>11</remote-type>
            <local-name>[Black_days]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>Black_days</remote-alias>
            <ordinal>30</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Black days' datatype='boolean' name='[Black_days]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Cid' datatype='integer' name='[cid]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='real' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.217245' measure-ordering='alphabetic' measure-percentage='0.782755' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='pred.table' inline='true' name='federated.07oluhh190rapt1bbii7t0lc5gxp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='pred.table' name='textscan.1ifqbrt10we7961bubrsi0eqwk7m'>
            <connection class='textscan' directory='C:/Users/Yuga 14/Desktop/final project/crona/CSV-Files' filename='pred.table.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1ifqbrt10we7961bubrsi0eqwk7m' name='pred.table.csv' table='[pred.table#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='observed' ordinal='0' />
            <column datatype='integer' name='predicted' ordinal='1' />
            <column datatype='string' name='country' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pred.table.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>observed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[observed]</local-name>
            <parent-name>[pred.table.csv]</parent-name>
            <remote-alias>observed</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predicted</remote-name>
            <remote-type>20</remote-type>
            <local-name>[predicted]</local-name>
            <parent-name>[pred.table.csv]</parent-name>
            <remote-alias>predicted</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[pred.table.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Observed' datatype='integer' name='[observed]' role='measure' type='quantitative' />
      <column caption='Predicted' datatype='integer' name='[predicted]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.428331' measure-ordering='alphabetic' measure-percentage='0.571669' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='covid_ih_countries' inline='true' name='federated.0im3mlj0jt9mtx1fvjy3e1155yd3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_ih_countries' name='textscan.1067m4q1arw2nl19xk17x066y11e'>
            <connection class='textscan' directory='C:/Users/Yuga 14/Desktop/final project/crona/CSV-Files' filename='covid_ih_countries.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1067m4q1arw2nl19xk17x066y11e' name='covid_ih_countries.csv' table='[covid_ih_countries#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='country' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='total_deaths' ordinal='6' />
            <column datatype='real' name='new_deaths' ordinal='7' />
            <column datatype='real' name='total_cases_per_million' ordinal='8' />
            <column datatype='real' name='new_cases_per_million' ordinal='9' />
            <column datatype='real' name='total_deaths_per_million' ordinal='10' />
            <column datatype='real' name='new_deaths_per_million' ordinal='11' />
            <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='stringency_index' ordinal='13' />
            <column datatype='real' name='population_density' ordinal='14' />
            <column datatype='real' name='median_age' ordinal='15' />
            <column datatype='real' name='aged_65_older' ordinal='16' />
            <column datatype='real' name='aged_70_older' ordinal='17' />
            <column datatype='real' name='gdp_per_capita' ordinal='18' />
            <column datatype='real' name='extreme_poverty' ordinal='19' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='20' />
            <column datatype='real' name='diabetes_prevalence' ordinal='21' />
            <column datatype='real' name='female_smokers' ordinal='22' />
            <column datatype='real' name='male_smokers' ordinal='23' />
            <column datatype='real' name='handwashing_facilities' ordinal='24' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='25' />
            <column datatype='real' name='life_expectancy' ordinal='26' />
            <column datatype='real' name='human_development_index' ordinal='27' />
            <column datatype='real' name='population' ordinal='28' />
            <column datatype='integer' name='cid' ordinal='29' />
            <column datatype='boolean' name='Black_days' ordinal='30' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cid]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>cid</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Black_days</remote-name>
            <remote-type>11</remote-type>
            <local-name>[Black_days]</local-name>
            <parent-name>[covid_ih_countries.csv]</parent-name>
            <remote-alias>Black_days</remote-alias>
            <ordinal>30</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Black days' datatype='boolean' name='[Black_days]' role='dimension' type='nominal' />
      <column caption='Deaths_ratio' datatype='real' name='[Calculation_757449189113528320]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='([total_deaths]/[population])' />
      </column>
      <column caption='new_case_ratio' datatype='real' name='[Calculation_757449189117648899]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[new_cases]/[population]' />
      </column>
      <column caption='Total_case_ratio' datatype='real' name='[Calculation_757449189118676996]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[total_cases]/[population]' />
      </column>
      <column caption='New_death_ratio' datatype='real' name='[Calculation_757449189119778821]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[new_deaths]/[population]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Cid' datatype='integer' name='[cid]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='real' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.177066' measure-ordering='alphabetic' measure-percentage='0.822934' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='iso_code' />
        <field-sort-custom-order field='continent' />
        <field-sort-custom-order field='country' />
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='total_cases' />
        <field-sort-custom-order field='new_cases' />
        <field-sort-custom-order field='total_deaths' />
        <field-sort-custom-order field='new_deaths' />
        <field-sort-custom-order field='total_cases_per_million' />
        <field-sort-custom-order field='new_cases_per_million' />
        <field-sort-custom-order field='total_deaths_per_million' />
        <field-sort-custom-order field='new_deaths_per_million' />
        <field-sort-custom-order field='new_vaccinations_smoothed_per_million' />
        <field-sort-custom-order field='stringency_index' />
        <field-sort-custom-order field='population_density' />
        <field-sort-custom-order field='median_age' />
        <field-sort-custom-order field='aged_65_older' />
        <field-sort-custom-order field='aged_70_older' />
        <field-sort-custom-order field='gdp_per_capita' />
        <field-sort-custom-order field='extreme_poverty' />
        <field-sort-custom-order field='cardiovasc_death_rate' />
        <field-sort-custom-order field='diabetes_prevalence' />
        <field-sort-custom-order field='female_smokers' />
        <field-sort-custom-order field='male_smokers' />
        <field-sort-custom-order field='handwashing_facilities' />
        <field-sort-custom-order field='hospital_beds_per_thousand' />
        <field-sort-custom-order field='life_expectancy' />
        <field-sort-custom-order field='Calculation_757449189117648899' />
        <field-sort-custom-order field='human_development_index' />
        <field-sort-custom-order field='population' />
        <field-sort-custom-order field='cid' />
        <field-sort-custom-order field='Black_days' />
        <field-sort-custom-order field='Calculation_757449189113528320' />
        <field-sort-custom-order field='Calculation_757449189118676996' />
        <field-sort-custom-order field='Calculation_757449189119778821' />
      </field-sort-info>
    </datasource>
    <datasource caption='covid_pred_countries' inline='true' name='federated.0lz7eur1cp6pxl1049u5t0mr02rp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_pred_countries' name='textscan.0gb63g81m4ue6e0zy8f670xmidm1'>
            <connection class='textscan' directory='C:/Users/Yuga 14/Desktop/final project/crona/CSV-Files' filename='covid_pred_countries.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0gb63g81m4ue6e0zy8f670xmidm1' name='covid_pred_countries.csv' table='[covid_pred_countries#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='real' name='observed' ordinal='0' />
            <column datatype='real' name='predicted' ordinal='1' />
            <column datatype='real' name='diff' ordinal='2' />
            <column datatype='string' name='country' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_pred_countries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>observed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[observed]</local-name>
            <parent-name>[covid_pred_countries.csv]</parent-name>
            <remote-alias>observed</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predicted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[predicted]</local-name>
            <parent-name>[covid_pred_countries.csv]</parent-name>
            <remote-alias>predicted</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diff]</local-name>
            <parent-name>[covid_pred_countries.csv]</parent-name>
            <remote-alias>diff</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[covid_pred_countries.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Diff' datatype='real' name='[diff]' role='measure' type='quantitative' />
      <column caption='Observed' datatype='real' name='[observed]' role='measure' type='quantitative' />
      <column caption='Predicted' datatype='real' name='[predicted]' role='measure' type='quantitative' />
      <column-instance column='[observed]' derivation='Count' name='[cnt:observed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[predicted]' derivation='Count' name='[cnt:predicted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[observed]' derivation='None' name='[none:observed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[predicted]' derivation='None' name='[none:predicted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[observed]' derivation='Sum' name='[sum:observed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[predicted]' derivation='Sum' name='[sum:predicted:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.411467' measure-ordering='alphabetic' measure-percentage='0.588533' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[cnt:observed:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[none:observed:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[sum:observed:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[cnt:predicted:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[none:predicted:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[sum:predicted:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='covidforln' inline='true' name='federated.10eosnj07ha0gv10x6lmc0avase7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covidforln' name='textscan.1oxvwfh0pa2spn10yst1q0sytei3'>
            <connection class='textscan' directory='C:/Users/Yuga 14/Desktop/final project/crona/CSV-Files' filename='covidforln.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1oxvwfh0pa2spn10yst1q0sytei3' name='covidforln.csv' table='[covidforln#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='country' ordinal='2' />
            <column datatype='real' name='total_cases' ordinal='3' />
            <column datatype='real' name='new_cases' ordinal='4' />
            <column datatype='real' name='total_deaths' ordinal='5' />
            <column datatype='real' name='new_deaths' ordinal='6' />
            <column datatype='real' name='total_cases_per_million' ordinal='7' />
            <column datatype='real' name='new_cases_per_million' ordinal='8' />
            <column datatype='real' name='total_deaths_per_million' ordinal='9' />
            <column datatype='real' name='new_deaths_per_million' ordinal='10' />
            <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='11' />
            <column datatype='real' name='stringency_index' ordinal='12' />
            <column datatype='real' name='population_density' ordinal='13' />
            <column datatype='real' name='median_age' ordinal='14' />
            <column datatype='real' name='aged_65_older' ordinal='15' />
            <column datatype='real' name='aged_70_older' ordinal='16' />
            <column datatype='real' name='gdp_per_capita' ordinal='17' />
            <column datatype='real' name='extreme_poverty' ordinal='18' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='19' />
            <column datatype='real' name='diabetes_prevalence' ordinal='20' />
            <column datatype='real' name='female_smokers' ordinal='21' />
            <column datatype='real' name='male_smokers' ordinal='22' />
            <column datatype='real' name='handwashing_facilities' ordinal='23' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='24' />
            <column datatype='real' name='life_expectancy' ordinal='25' />
            <column datatype='real' name='human_development_index' ordinal='26' />
            <column datatype='real' name='population' ordinal='27' />
            <column datatype='real' name='total_deaths_per_hundred' ordinal='28' />
            <column datatype='real' name='total_deaths_per_ratio' ordinal='29' />
            <column datatype='integer' name='cid' ordinal='30' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_hundred]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>total_deaths_per_hundred</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_ratio]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>total_deaths_per_ratio</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cid]</local-name>
            <parent-name>[covidforln.csv]</parent-name>
            <remote-alias>cid</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Case Ratio' datatype='real' name='[Calculation_1089589661726195712]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[total_cases]/[population]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Cid' datatype='integer' name='[cid]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='real' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Hundred' datatype='real' name='[total_deaths_per_hundred]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Ratio' datatype='real' name='[total_deaths_per_ratio]' role='measure' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.133221' measure-ordering='alphabetic' measure-percentage='0.866779' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='iso_code' />
        <field-sort-custom-order field='continent' />
        <field-sort-custom-order field='country' />
        <field-sort-custom-order field='total_cases' />
        <field-sort-custom-order field='new_cases' />
        <field-sort-custom-order field='total_deaths' />
        <field-sort-custom-order field='new_deaths' />
        <field-sort-custom-order field='total_cases_per_million' />
        <field-sort-custom-order field='new_cases_per_million' />
        <field-sort-custom-order field='total_deaths_per_million' />
        <field-sort-custom-order field='new_deaths_per_million' />
        <field-sort-custom-order field='new_vaccinations_smoothed_per_million' />
        <field-sort-custom-order field='stringency_index' />
        <field-sort-custom-order field='population_density' />
        <field-sort-custom-order field='median_age' />
        <field-sort-custom-order field='aged_65_older' />
        <field-sort-custom-order field='aged_70_older' />
        <field-sort-custom-order field='gdp_per_capita' />
        <field-sort-custom-order field='extreme_poverty' />
        <field-sort-custom-order field='cardiovasc_death_rate' />
        <field-sort-custom-order field='diabetes_prevalence' />
        <field-sort-custom-order field='female_smokers' />
        <field-sort-custom-order field='male_smokers' />
        <field-sort-custom-order field='handwashing_facilities' />
        <field-sort-custom-order field='hospital_beds_per_thousand' />
        <field-sort-custom-order field='life_expectancy' />
        <field-sort-custom-order field='human_development_index' />
        <field-sort-custom-order field='population' />
        <field-sort-custom-order field='total_deaths_per_hundred' />
        <field-sort-custom-order field='total_deaths_per_ratio' />
        <field-sort-custom-order field='cid' />
        <field-sort-custom-order field='Calculation_1089589661726195712' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='TD.Pred' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='TD.Pred' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Age 70'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ff0000' fontname='Tableau Bold' fontsize='20'>People aged over 70 </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_ih_countries' name='federated.0im3mlj0jt9mtx1fvjy3e1155yd3' />
          </datasources>
          <datasource-dependencies datasource='federated.0im3mlj0jt9mtx1fvjy3e1155yd3'>
            <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[aged_70_older]' derivation='Sum' name='[sum:aged_70_older:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='font-size' data-class='subtotal' scope='cols' value='12' />
            <format attr='font-weight' data-class='subtotal' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#000000' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='12' />
            <format attr='font-size' scope='rows' value='12' />
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='color' scope='rows' value='#1b1b1b' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[sum:aged_70_older:qk]</rows>
        <cols>[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{C5BAB023-9F66-4323-B7F4-98A0A214FCA9}' />
    </worksheet>
    <worksheet name='NeCa'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ff0000' fontsize='20'>Changes of COVID-19 New Cases  </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_ih_countries' name='federated.0im3mlj0jt9mtx1fvjy3e1155yd3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0im3mlj0jt9mtx1fvjy3e1155yd3'>
            <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]'>
            <groupfilter from='&quot;France&quot;' function='range' level='[none:country:nk]' to='&quot;United Kingdom&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[tdy:date:qk]' scope='cols' value='Date' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' scope='rows' value='12' />
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='color' scope='rows' value='#000000' />
            <format attr='color' scope='cols' value='#000000' />
            <format attr='font-size' scope='cols' value='12' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[sum:new_cases:qk]</rows>
        <cols>[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{63CA9D88-EE0B-49E3-ACCE-4618B98F3DD5}' />
    </worksheet>
    <worksheet name='NeCaRa'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ff0000' fontsize='20'>New Case Ratio</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_ih_countries' name='federated.0im3mlj0jt9mtx1fvjy3e1155yd3' />
          </datasources>
          <datasource-dependencies datasource='federated.0im3mlj0jt9mtx1fvjy3e1155yd3'>
            <column caption='new_case_ratio' datatype='real' name='[Calculation_757449189117648899]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[new_cases]/[population]' />
            </column>
            <column-instance column='[Calculation_757449189117648899]' derivation='Avg' name='[avg:Calculation_757449189117648899:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' scope='cols' value='12' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='color' scope='cols' value='#1b1b1b' />
            <format attr='font-size' scope='rows' value='12' />
            <format attr='color' scope='rows' value='#000000' />
            <format attr='font-weight' scope='rows' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[avg:Calculation_757449189117648899:qk]</rows>
        <cols>[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{84B2D254-F1C9-4A13-9E4A-D0FF850CF0A9}' />
    </worksheet>
    <worksheet name='NeDe'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ff0000' fontsize='20'>Changes in Number of New Deaths Due to COVID-19</run>
            <run bold='true' fontalignment='1'>Æ </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_ih_countries' name='federated.0im3mlj0jt9mtx1fvjy3e1155yd3' />
          </datasources>
          <datasource-dependencies datasource='federated.0im3mlj0jt9mtx1fvjy3e1155yd3'>
            <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[tdy:date:qk]' scope='cols' value='Date' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' scope='rows' value='#1b1b1b' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='font-size' data-class='subtotal' scope='rows' value='12' />
            <format attr='font-size' data-class='subtotal' scope='cols' value='12' />
            <format attr='font-weight' data-class='subtotal' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='total' scope='rows' value='12' />
            <format attr='color' data-class='total' scope='rows' value='#1b1b1b' />
            <format attr='font-size' data-class='subtotal' scope='cols' value='12' />
            <format attr='font-weight' data-class='subtotal' scope='cols' value='bold' />
            <format attr='color' data-class='subtotal' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' scope='rows' value='12' />
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='color' scope='rows' value='#1b1b1b' />
            <format attr='font-size' scope='cols' value='12' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='color' scope='cols' value='#1b1b1b' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[sum:new_deaths:qk]' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[sum:new_deaths:qk]</rows>
        <cols>[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{CB6B7B93-CC0F-4FC3-8A07-4E49C10FD58C}' />
    </worksheet>
    <worksheet name='NeDeRa'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ff0000' fontsize='20'>New Death Ratio</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_ih_countries' name='federated.0im3mlj0jt9mtx1fvjy3e1155yd3' />
          </datasources>
          <datasource-dependencies datasource='federated.0im3mlj0jt9mtx1fvjy3e1155yd3'>
            <column caption='New_death_ratio' datatype='real' name='[Calculation_757449189119778821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[new_deaths]/[population]' />
            </column>
            <column-instance column='[Calculation_757449189119778821]' derivation='Avg' name='[avg:Calculation_757449189119778821:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-size' scope='rows' value='12' />
            <format attr='color' scope='rows' value='#1b1b1b' />
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-size' scope='cols' value='12' />
            <format attr='color' scope='cols' value='#000000' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[avg:Calculation_757449189119778821:qk]</rows>
        <cols>[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{97066CBE-7D7A-45F7-B9AE-1E417806ED7C}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='pred.table' name='federated.07oluhh190rapt1bbii7t0lc5gxp' />
          </datasources>
          <datasource-dependencies datasource='federated.07oluhh190rapt1bbii7t0lc5gxp'>
            <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Observed' datatype='integer' name='[observed]' role='measure' type='quantitative' />
            <column caption='Predicted' datatype='integer' name='[predicted]' role='measure' type='quantitative' />
            <column-instance column='[observed]' derivation='Sum' name='[sum:observed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[predicted]' derivation='Sum' name='[sum:predicted:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07oluhh190rapt1bbii7t0lc5gxp].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07oluhh190rapt1bbii7t0lc5gxp].[sum:observed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07oluhh190rapt1bbii7t0lc5gxp].[sum:predicted:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.07oluhh190rapt1bbii7t0lc5gxp].[none:country:nk]'>
            <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.07oluhh190rapt1bbii7t0lc5gxp].[:Measure Names]</column>
            <column>[federated.07oluhh190rapt1bbii7t0lc5gxp].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.07oluhh190rapt1bbii7t0lc5gxp].[:Measure Names]' value='213' />
            <format attr='height' field='[federated.07oluhh190rapt1bbii7t0lc5gxp].[none:country:nk]' value='44' />
            <format attr='font-size' data-class='total' scope='cols' value='14' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='color' data-class='total' scope='cols' value='#1b1b1b' />
            <format attr='color' data-class='total' scope='rows' value='#1b1b1b' />
            <format attr='font-size' data-class='total' scope='rows' value='14' />
            <format attr='font-size' data-class='subtotal' scope='rows' value='14' />
            <format attr='color' data-class='subtotal' scope='rows' value='#000000' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.07oluhh190rapt1bbii7t0lc5gxp].[none:country:nk]' value='164' />
            <format attr='font-weight' data-class='total' scope='rows' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='rows' value='#1b1b1b' />
            <format attr='font-size' scope='rows' value='14' />
            <format attr='font-size' scope='cols' value='14' />
            <format attr='color' scope='cols' value='#000000' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='14' />
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#1b1b1b' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.07oluhh190rapt1bbii7t0lc5gxp].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='0.84558010101318359' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07oluhh190rapt1bbii7t0lc5gxp].[none:country:nk]</rows>
        <cols>[federated.07oluhh190rapt1bbii7t0lc5gxp].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{780CF51B-F8DE-4224-954D-19A9FDD0C985}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{104107D2-AD1C-408D-BFA0-58F5F313A003}' />
    </worksheet>
    <worksheet name='TD.Pred'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ff0000' fontsize='20'>Total Death: Observed vs Pridicted</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_pred_countries' name='federated.0lz7eur1cp6pxl1049u5t0mr02rp' />
          </datasources>
          <datasource-dependencies datasource='federated.0lz7eur1cp6pxl1049u5t0mr02rp'>
            <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[observed]' derivation='None' name='[none:observed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[predicted]' derivation='None' name='[none:predicted:qk]' pivot='key' type='quantitative' />
            <column caption='Observed' datatype='real' name='[observed]' role='measure' type='quantitative' />
            <column caption='Predicted' datatype='real' name='[predicted]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='auto-subtitle' class='0' field='[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[none:observed:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='wrap' data-class='total' value='off' />
            <format attr='font-size' data-class='subtotal' scope='cols' value='12' />
            <format attr='color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='border-width' value='0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' scope='cols' value='#1b1b1b' />
            <format attr='font-size' data-class='subtotal' scope='cols' value='12' />
            <format attr='font-weight' data-class='subtotal' scope='cols' value='bold' />
            <format attr='border-width' value='0' />
            <format attr='border-width' data-class='total' value='1' />
            <format attr='border-style' data-class='total' value='solid' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[none:observed:qk]' value='' />
            <format attr='text-orientation' field='[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[none:observed:qk]' value='0' />
            <format attr='color' field='[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[none:observed:qk]' value='#333333' />
            <format attr='color' scope='rows' value='#1b1b1b' />
            <format attr='font-size' scope='rows' value='12' />
            <format attr='color' scope='cols' value='#000000' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='12' />
            <format attr='font-weight' scope='rows' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' value='0' />
            <format attr='border-width' data-class='total' value='1' />
            <format attr='border-style' data-class='total' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='stroke-color' scope='cols' value='#0000004b' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[none:country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[none:predicted:qk]</rows>
        <cols>[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[none:observed:qk]</cols>
      </table>
      <simple-id uuid='{0CF24B02-647F-4D78-828D-9476DE1725C7}' />
    </worksheet>
    <worksheet name='TD.Predic.Re'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ff0000' fontsize='20'>Total Death: Observtion  vs Diviation from Pridiction</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_pred_countries' name='federated.0lz7eur1cp6pxl1049u5t0mr02rp' />
          </datasources>
          <datasource-dependencies datasource='federated.0lz7eur1cp6pxl1049u5t0mr02rp'>
            <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Diff' datatype='real' name='[diff]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[diff]' derivation='None' name='[none:diff:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed]' derivation='None' name='[none:observed:qk]' pivot='key' type='quantitative' />
            <column caption='Observed' datatype='real' name='[observed]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[none:diff:qk]' scope='rows' value='Diviation' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' scope='rows' value='#1b1b1b' />
            <format attr='font-size' data-class='subtotal' scope='rows' value='12' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='font-size' data-class='subtotal' scope='cols' value='12' />
            <format attr='font-weight' data-class='subtotal' scope='cols' value='bold' />
            <format attr='color' data-class='total' scope='cols' value='#1b1b1b' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='subtotal' scope='rows' value='12' />
            <format attr='font-size' data-class='subtotal' scope='cols' value='12' />
            <format attr='font-weight' data-class='total' scope='cols' value='normal' />
            <format attr='color' data-class='total' scope='cols' value='#1b1b1b' />
            <format attr='color' data-class='subtotal' value='#1b1b1b' />
            <format attr='font-weight' data-class='subtotal' value='bold' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='12' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[none:diff:qk]' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='1' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[none:country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[none:diff:qk]</rows>
        <cols>[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[none:observed:qk]</cols>
      </table>
      <simple-id uuid='{687BE040-67AF-49EB-AEE3-5C203339D89B}' />
    </worksheet>
    <worksheet name='ToCaRa'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ff0000' fontsize='20'>Total Case Ratio</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covidforln' name='federated.10eosnj07ha0gv10x6lmc0avase7' />
          </datasources>
          <datasource-dependencies datasource='federated.10eosnj07ha0gv10x6lmc0avase7'>
            <column caption='Total Case Ratio' datatype='real' name='[Calculation_1089589661726195712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[total_cases]/[population]' />
            </column>
            <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1089589661726195712]' derivation='Sum' name='[sum:Calculation_1089589661726195712:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10eosnj07ha0gv10x6lmc0avase7].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.10eosnj07ha0gv10x6lmc0avase7].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#000000' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='12' />
            <format attr='font-size' scope='rows' value='12' />
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='color' scope='rows' value='#1b1b1b' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10eosnj07ha0gv10x6lmc0avase7].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.10eosnj07ha0gv10x6lmc0avase7].[sum:Calculation_1089589661726195712:qk]</rows>
        <cols>[federated.10eosnj07ha0gv10x6lmc0avase7].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{E2CD73C2-4F23-406F-A923-44300B5D69EF}' />
    </worksheet>
    <worksheet name='ToDeRa'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ff0000' fontsize='20'>Total Death Ratio</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covidforln' name='federated.10eosnj07ha0gv10x6lmc0avase7' />
          </datasources>
          <datasource-dependencies datasource='federated.10eosnj07ha0gv10x6lmc0avase7'>
            <column-instance column='[total_deaths_per_ratio]' derivation='Avg' name='[avg:total_deaths_per_ratio:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Total Deaths Per Ratio' datatype='real' name='[total_deaths_per_ratio]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10eosnj07ha0gv10x6lmc0avase7].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.10eosnj07ha0gv10x6lmc0avase7].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.10eosnj07ha0gv10x6lmc0avase7].[avg:total_deaths_per_ratio:qk]' scope='rows' value='Avg. Total Deaths Ratio' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' scope='cols' value='12' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='color' scope='cols' value='#1b1b1b' />
            <format attr='color' scope='rows' value='#000000' />
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-size' scope='rows' value='12' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10eosnj07ha0gv10x6lmc0avase7].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.10eosnj07ha0gv10x6lmc0avase7].[avg:total_deaths_per_ratio:qk]</rows>
        <cols>[federated.10eosnj07ha0gv10x6lmc0avase7].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{05FD5FFC-C9E5-400B-BDA8-C2AEA7612D7B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Cover'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='7' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='11' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='9' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='98000' id='6' is-scaled='1' param='C:/Users/Yuga 14/Desktop/final project/crona/Coronavirus_3D_illustration_by_CDC_1600x900 (1).png' type='bitmap' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#000000' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='18375' id='8' is-centered='0' is-scaled='1' param='C:/Users/Yuga 14/Desktop/presentation/logo-ironhack-blue.png' type='bitmap' w='16100' x='1300' y='1625' />
        <zone forceUpdate='true' h='13875' id='12' type='text' w='74100' x='16400' y='1500'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Tableau Bold' fontsize='24'>Time Series Analysis: Forecast Total deaths due to COVID-19</run>
            <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='24'>Æ </run>
          </formatted-text>
        </zone>
        <zone h='9875' id='13' type='text' w='55500' x='25300' y='84375'>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff' fontname='Tableau Bold' fontsize='24'>Final-Bootcamp Project</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontcolor='#ffffff' fontname='Tableau Bold' fontsize='20'>Alireza Shahbabaie </run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='3750' id='14' type='text' w='21400' x='1200' y='94500'>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff' fontname='Tableau' fontsize='12'>Friday, November 4, 2022 </run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='38' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='37' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='98000' id='6' is-fixed='true' is-scaled='1' param='C:/Users/Yuga 14/Desktop/final project/crona/Coronavirus_3D_illustration_by_CDC_1600x900 (1).png' type='bitmap' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#000000' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='13875' id='12' type='text' w='74100' x='16400' y='1500'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Tableau Bold' fontsize='24'>Time Series Analysis: Forecast Total deaths due to COVID-19</run>
                    <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='24'>Æ </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='147' h='18375' id='8' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Yuga 14/Desktop/presentation/logo-ironhack-blue.png' type='bitmap' w='16100' x='1300' y='1625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9875' id='13' type='text' w='55500' x='25300' y='84375'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#ffffff' fontname='Tableau Bold' fontsize='24'>Final-Bootcamp Project</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run fontalignment='1' fontcolor='#ffffff' fontname='Tableau Bold' fontsize='20'>Alireza Shahbabaie </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='3750' id='14' type='text' w='21400' x='1200' y='94500'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#ffffff' fontname='Tableau' fontsize='12'>Friday, November 4, 2022 </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F2E9ADC8-D3E7-46FF-B24F-6B67681AF1EE}' />
    </dashboard>
    <dashboard name='DataDef'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone forceUpdate='true' h='56125' id='3' type='text' w='96700' x='2000' y='16250'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ff0000' fontname='tableau ' fontsize='28'>Focus of Presentation</run>
            <run fontalignment='1'>Æ&#10;&#10;&#10;&#10;</run>
            <run>Æ&#10;&#10;&#10;&#10;</run>
            <run bold='true' fontcolor='#000000' fontsize='24'>Æ </run>
            <run>Æ&#10;&#10;&#10;</run>
            <run bold='true' fontcolor='#000000' fontsize='24'>• from February 1st of 2019 — October 27st of 2022</run>
            <run>Æ&#10;&#10;&#10;&#10;&#10;</run>
            <run bold='true' fontcolor='#000000' fontsize='24'>• 8 Countries:  DE, NL, SP, TR, LU, FR, PT, UK</run>
            <run>Æ&#10;&#10;&#10;&#10;&#10;</run>
            <run fontcolor='#000000' fontname='source-serif-pro,Georgia,Cambria,Times New Roman,Times,serif' fontsize='15'>Æ </run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='27' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='26' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='56125' id='3' type='text' w='96700' x='2000' y='16250'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#ff0000' fontname='tableau ' fontsize='28'>Focus of Presentation</run>
                    <run fontalignment='1'>Æ&#10;&#10;&#10;&#10;</run>
                    <run>Æ&#10;&#10;&#10;&#10;</run>
                    <run bold='true' fontcolor='#000000' fontsize='24'>Æ </run>
                    <run>Æ&#10;&#10;&#10;</run>
                    <run bold='true' fontcolor='#000000' fontsize='24'>• from February 1st of 2019 — October 27st of 2022</run>
                    <run>Æ&#10;&#10;&#10;&#10;&#10;</run>
                    <run bold='true' fontcolor='#000000' fontsize='24'>• 8 Countries:  DE, NL, SP, TR, LU, FR, PT, UK</run>
                    <run>Æ&#10;&#10;&#10;&#10;&#10;</run>
                    <run fontcolor='#000000' fontname='source-serif-pro,Georgia,Cambria,Times New Roman,Times,serif' fontsize='15'>Æ </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{85469B69-9E6E-4AF1-BC75-5A7FC8B0567D}' />
    </dashboard>
    <dashboard name='LR.F'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone forceUpdate='true' h='98000' id='3' type='text' w='98400' x='800' y='1000'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#ff0000' fontsize='24'>Important paramiters  to predict Total  Deaths  via Linear Regrestion</run>
              <run fontalignment='1'>Æ&#10;&#10;&#10;&#10;</run>
              <run>Æ&#10;</run>
              <run bold='true' fontcolor='#1b1b1b' fontsize='20'>•New Cases</run>
              <run>Æ&#10;&#10;</run>
              <run bold='true' fontcolor='#1b1b1b' fontsize='20'>•New Vaccinations</run>
              <run>Æ&#10;&#10;</run>
              <run bold='true' fontcolor='#1b1b1b' fontsize='20'>•GDP per Capita</run>
              <run>Æ&#10;&#10;</run>
              <run bold='true' fontcolor='#1b1b1b' fontsize='20'>•Male Smokers</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='19' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='98000' id='3' type='text' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#ff0000' fontsize='24'>Important paramiters  to predict Total  Deaths  via Linear Regrestion</run>
                    <run fontalignment='1'>Æ&#10;&#10;&#10;&#10;</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#1b1b1b' fontsize='20'>•New Cases</run>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontcolor='#1b1b1b' fontsize='20'>•New Vaccinations</run>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontcolor='#1b1b1b' fontsize='20'>•GDP per Capita</run>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontcolor='#1b1b1b' fontsize='20'>•Male Smokers</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BD63ACD5-1B42-42E0-BB28-A84F1AC51D3F}' />
    </dashboard>
    <dashboard name='Presentation' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1716' minheight='964' minwidth='1716' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='10' param='vert' removable='false' type='layout-flow' w='99068' x='466' y='830'>
            <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='99068' x='466' y='830'>
              <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='99068' x='466' y='830' />
              <zone h='87863' id='5' paired-zone-id='4' removable='false' type='flipboard' w='99068' x='466' y='11307'>
                <flipboard active-id='20' nav-type='caption' show-nav-arrows='true'>
                  <story-points>
                    <story-point caption='Title' captured-sheet='Cover' id='13'>
                      <capturedDeltas>
                        <dashboard name='Cover'>
                          <zone id='12'>
                            <formatted-text>
                              <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Tableau Bold' fontsize='24'>Time Series Analysis: Forecast Total Deaths due to </run>
                              <run fontalignment='1' fontcolor='#ffffff' fontname='Tableau Bold' fontsize='24'>Coronavirus Disease(</run>
                              <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Tableau Bold' fontsize='24'>COVID-19)</run>
                              <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='24'>Æ </run>
                            </formatted-text>
                          </zone>
                        </dashboard>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='Research Question' captured-sheet='RQ' id='18' />
                    <story-point caption='Research Question' captured-sheet='DataDef' id='19' />
                    <story-point caption='New Death' captured-sheet='NeDe' id='3'>
                      <capturedDeltas>
                        <worksheet name='NeDe'>
                          <filter class='categorical' column='[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]'>
                            <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                          </filter>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='New Death Ratio' captured-sheet='NeDeRa' id='6' />
                    <story-point caption='New  Case' captured-sheet='NeCa' id='4'>
                      <capturedDeltas>
                        <worksheet name='NeCa'>
                          <highlight field='[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]'>
                            <color-one-way>
                              <field>[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]</field>
                              <field>[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[yr:date:ok]</field>
                            </color-one-way>
                            <bucket-selection>
                              <bucket>&quot;Portugal&quot;</bucket>
                            </bucket-selection>
                          </highlight>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='New Case Ratio' captured-sheet='NeCaRa' id='5' />
                    <story-point caption='Total Death Ratio' captured-sheet='ToDeRa' id='7' />
                    <story-point caption='Total Case Ratio' captured-sheet='ToCaRa' id='9' />
                    <story-point caption='People Aged Over 70' captured-sheet='Age 70' id='8' />
                    <story-point caption='Table:Observation  vs Prediction' captured-sheet='Table.Pred' id='15'>
                      <capturedDeltas>
                        <worksheet name='Sheet 10'>
                          <filter class='categorical' column='[federated.07oluhh190rapt1bbii7t0lc5gxp].[none:country:nk]'>
                            <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                          </filter>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='Total Death Prediction' captured-sheet='TD.Pred' id='10'>
                      <capturedDeltas>
                        <worksheet name='TD.Pred'>
                          <filter class='categorical' column='[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[none:country:nk]'>
                            <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                          </filter>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='Residual Prediction' captured-sheet='TD.Predic.Re' id='2' />
                    <story-point caption='LM.MIP' captured-sheet='LR.F' id='20'>
                      <capturedDeltas>
                        <dashboard name='LR.F'>
                          <zone id='3'>
                            <formatted-text>
                              <run bold='true' fontalignment='1' fontcolor='#ff0000' fontsize='28'>Important Paramiters  to Predict Total  Deaths  via Linear Regrestion</run>
                              <run fontalignment='1'>Æ&#10;&#10;&#10;&#10;&#10;</run>
                              <run>Æ&#10;</run>
                              <run bold='true' fontcolor='#1b1b1b' fontsize='26'>•New Cases</run>
                              <run>Æ&#10;&#10;&#10;</run>
                              <run bold='true' fontcolor='#1b1b1b' fontsize='26'>•New Vaccinations</run>
                              <run>Æ&#10;&#10;&#10;</run>
                              <run bold='true' fontcolor='#1b1b1b' fontsize='26'>•GDP per Capita</run>
                              <run>Æ&#10;&#10;&#10;</run>
                              <run bold='true' fontcolor='#1b1b1b' fontsize='26'>•Male Smokers</run>
                              <run>Æ&#10;&#10;</run>
                            </formatted-text>
                          </zone>
                        </dashboard>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='Questions' captured-sheet='Question' id='17' />
                  </story-points>
                </flipboard>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{48680111-6EEE-4F43-B323-88907523495D}' />
    </dashboard>
    <dashboard name='Question'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='69250' id='3' is-centered='0' is-scaled='1' param='C:/Users/Yuga 14/Desktop/final project/crona/question-mark.jpg' type='bitmap' w='81600' x='20000' y='27750' />
        <zone forceUpdate='true' h='29000' id='22' type='text' w='56200' x='17700' y='5000'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ff0000' fontsize='24'>Thanks and Goodby</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='27' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='29000' id='22' type='text' w='56200' x='17700' y='5000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#ff0000' fontsize='24'>Thanks and Goodby</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='69250' id='3' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Yuga 14/Desktop/final project/crona/question-mark.jpg' type='bitmap' w='81600' x='20000' y='27750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EA536360-D4D5-41D5-A189-510A7896FBEB}' />
    </dashboard>
    <dashboard name='RQ'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone forceUpdate='true' h='96875' id='3' type='text' w='96100' x='2000' y='1625'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ff0000' fontname='Tableau Bold' fontsize='28'>Research Questions</run>
            <run fontalignment='1'>Æ&#10;&#10;&#10;&#10;&#10;&#10;&#10;</run>
            <run>Æ&#10;</run>
            <run fontcolor='#1b1b1b' fontname='Tableau ' fontsize='24'>• Can we predict total deaths due to Coronavirus disease?</run>
            <run>Æ&#10;&#10;&#10;&#10;</run>
            <run fontcolor='#1b1b1b' fontname='Tableau ' fontsize='24'>• How accurate this prediction would be ? </run>
            <run>Æ&#10;&#10;&#10;&#10;</run>
            <run fontcolor='#1b1b1b' fontname='Tableau ' fontsize='24'>• Which parameters can help us more to predict total deaths?</run>
            <run>Æ&#10;&#10;&#10;</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#ff0000' fontname='Tableau ' fontsize='28'> In order to Answer</run>
            <run fontalignment='1'>Æ&#10;&#10;&#10;</run>
            <run>Æ&#10;</run>
            <run fontcolor='#1b1b1b' fontname='Tableau ' fontsize='24'>• </run>
            <run fontcolor='#000000' fontname='tableau ' fontsize='24'>Auto Regressive Integrated Moving Average (ARIMA) model</run>
            <run>Æ&#10;&#10;&#10;</run>
            <run fontcolor='#1b1b1b' fontname='Tableau ' fontsize='24'>• </run>
            <run fontcolor='#000000' fontname='tableau ' fontsize='24'>Linear Regression model </run>
            <run>Æ&#10;&#10;</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='27' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='26' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='96875' id='3' type='text' w='96100' x='2000' y='1625'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#ff0000' fontname='Tableau Bold' fontsize='28'>Research Questions</run>
                    <run fontalignment='1'>Æ&#10;&#10;&#10;&#10;&#10;&#10;&#10;</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#1b1b1b' fontname='Tableau ' fontsize='24'>• Can we predict total deaths due to Coronavirus disease?</run>
                    <run>Æ&#10;&#10;&#10;&#10;</run>
                    <run fontcolor='#1b1b1b' fontname='Tableau ' fontsize='24'>• How accurate this prediction would be ? </run>
                    <run>Æ&#10;&#10;&#10;&#10;</run>
                    <run fontcolor='#1b1b1b' fontname='Tableau ' fontsize='24'>• Which parameters can help us more to predict total deaths?</run>
                    <run>Æ&#10;&#10;&#10;</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ff0000' fontname='Tableau ' fontsize='28'> In order to Answer</run>
                    <run fontalignment='1'>Æ&#10;&#10;&#10;</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#1b1b1b' fontname='Tableau ' fontsize='24'>• </run>
                    <run fontcolor='#000000' fontname='tableau ' fontsize='24'>Auto Regressive Integrated Moving Average (ARIMA) model</run>
                    <run>Æ&#10;&#10;&#10;</run>
                    <run fontcolor='#1b1b1b' fontname='Tableau ' fontsize='24'>• </run>
                    <run fontcolor='#000000' fontname='tableau ' fontsize='24'>Linear Regression model </run>
                    <run>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6D84080C-0140-44D2-AAC8-0C3868456E6A}' />
    </dashboard>
    <dashboard name='Table.Pred'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='pred.table' name='federated.07oluhh190rapt1bbii7t0lc5gxp' />
      </datasources>
      <datasource-dependencies datasource='federated.07oluhh190rapt1bbii7t0lc5gxp'>
        <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='47250' id='3' name='Sheet 10' show-title='false' w='59800' x='11600' y='24500' />
        <zone h='35625' id='4' name='Sheet 10' param='[federated.07oluhh190rapt1bbii7t0lc5gxp].[none:country:nk]' type='filter' w='16000' x='75700' y='27000' />
        <zone forceUpdate='true' h='13625' id='5' type='text' w='55600' x='14700' y='2500'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ff0000' fontsize='24'>Total Death:  </run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#ff0000' fontsize='24'>Observation  vs Prediction</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='29' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='28' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='13625' id='5' type='text' w='55600' x='14700' y='2500'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#ff0000' fontsize='24'>Total Death:  </run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ff0000' fontsize='24'>Observation  vs Prediction</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='35625' id='4' mode='checkdropdown' name='Sheet 10' param='[federated.07oluhh190rapt1bbii7t0lc5gxp].[none:country:nk]' type='filter' w='16000' x='75700' y='27000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47250' id='3' is-fixed='true' name='Sheet 10' show-title='false' w='59800' x='11600' y='24500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2AE46511-C440-4789-A128-FB01384A4326}' />
    </dashboard>
  </dashboards>
  <windows source-height='114'>
    <window class='dashboard' name='Presentation'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{93D0E164-F76A-40A0-BE11-9218BF71A69D}' />
    </window>
    <window class='worksheet' name='TD.Pred'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[none:country:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[none:observed:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[:Measure Names]</field>
            <field>[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[sum:observed:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{EBA8AD16-8FC4-4BB9-BA96-EAF398575743}' />
    </window>
    <window class='worksheet' name='TD.Predic.Re'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[none:country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lz7eur1cp6pxl1049u5t0mr02rp].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{54FA29BE-B144-4026-BCC9-ADBFA8AC3930}' />
    </window>
    <window class='worksheet' name='NeDe'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]</field>
            <field>[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{70D77F74-CF10-4029-B1C7-6E1B14DA471E}' />
    </window>
    <window class='worksheet' name='NeCa'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]'>
          <color-one-way>
            <field>[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]</field>
            <field>[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[yr:date:ok]</field>
          </color-one-way>
          <bucket-selection>
            <bucket>&quot;United Kingdom&quot;</bucket>
          </bucket-selection>
        </highlight>
      </viewpoint>
      <simple-id uuid='{10D5FC7F-9048-4B01-835A-466F354AA9FD}' />
    </window>
    <window class='worksheet' name='NeCaRa'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E8729827-FEB9-422E-ADBC-A8CF01F45F43}' />
    </window>
    <window class='worksheet' name='NeDeRa'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{71AE09F2-6B00-452B-BFC4-FB596DCC3C6F}' />
    </window>
    <window class='worksheet' name='Age 70'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='6' param='[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0im3mlj0jt9mtx1fvjy3e1155yd3].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{834C822A-46CB-41E0-9980-59FD4AEA5714}' />
    </window>
    <window class='worksheet' name='ToDeRa'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='2' param='[federated.10eosnj07ha0gv10x6lmc0avase7].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.10eosnj07ha0gv10x6lmc0avase7].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C8B43C8F-0D17-4A6E-A076-BBF1C3B78931}' />
    </window>
    <window class='worksheet' maximized='true' name='ToCaRa'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.10eosnj07ha0gv10x6lmc0avase7].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.10eosnj07ha0gv10x6lmc0avase7].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E237FED8-77C7-4E93-B462-A0A28BE36758}' />
    </window>
    <window class='dashboard' name='Cover'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{D5993952-AD94-4938-9D90-C4828E5787EC}' />
    </window>
    <window class='dashboard' name='Table.Pred'>
      <viewpoints>
        <viewpoint name='Sheet 10' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F9079350-AD7A-47C0-8404-ED4BFD287194}' />
    </window>
    <window class='dashboard' name='Question'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{B5EFDA26-3E68-4F5C-A4DF-21F237A698AA}' />
    </window>
    <window class='dashboard' name='DataDef'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{F30AE3D4-B9DB-4CCD-8114-5DC81752BC02}' />
    </window>
    <window class='dashboard' name='RQ'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{60F86C68-B947-4D26-B70B-54D0C7DDB701}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EBE22A40-F033-44E1-A54E-24A408AB44CB}' />
    </window>
    <window class='dashboard' name='LR.F'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{0B6A5404-8541-4636-91B6-22132623C4DA}' />
    </window>
    <window class='worksheet' hidden='true' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.07oluhh190rapt1bbii7t0lc5gxp].[none:country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07oluhh190rapt1bbii7t0lc5gxp].[none:country:nk]</field>
            <field>[federated.07oluhh190rapt1bbii7t0lc5gxp].[none:predicted:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9E2C5291-446B-4A5E-BE9C-5475A546D7C0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Age 70' width='192'>
      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
      9v8JL3D6JFbfaAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Cover' width='192'>
      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
      7nS4du0aRrtN3tDZajTw/ICO53Eym6XabvMv+wr8B01j9MWXcFyXj65cIZ/LMXHoEF//+tc5
      dfo0kiQxODDI6NgYmqYhShLXrl7lE1/4IvG3ftqNLZYl+iIRVms1/utmm5/LZtmo17nZaPDO
      9Rs832zygh8w++xztD2/6zu1vs7KygpBtcqg5+EEIW08xFqNThBgVsq0FhcpRDQePpjF1HXc
      X/xlkhPjXUfHIKBTLGHNzuIHIZuOw4pl4wQBMUnCpFttvuK4DOgGE9Eoo9EYb7su910Xa39i
      rCeC5wnXHsZxIEPD413hSQxmj+vDTqDMQRq1Z4R9H+0dW9j77D03H+0Vjz+MhCFaECIBCN0c
      kpbvk1NVClrXl0QTRVKqytVSiTPZDEfSSVquT1RWKFkmHc+jmcsROXqUrKYRjcXxPA/TNGm2
      mmiqSkKV+W+zLYz6Om1riVv3i9xUIzz77AXyhQKqolJMltja2qLZbFKtVlhZWeXy5cu4rku7
      3WZoaIhiqYiiyBi6wdLyEmanw+uvf48Lzz7Lx15+Gd/zWFpaJBqNksvmKJdKzNyfYaJYxEqn
      WLdsio5NJhJhtdni383Oci4a5Z9deIargsCVapUTx48zMjLK8toquUyGFy9d4tq1qzz/wgt0
      TJOxsXHefPPHDA0NYRgGS4rCeqnI2VSKYcMgoSgomsa/X13lP25uMiEIfLa/D+3OXZLpNIcW
      F7gyMIhpmt0VvFbjeUK8qMH9TgcBunRREJjUI4xHo2RVFUWS4OoV/s833+Sf//v/g9j4GK1a
      nbWHc1jLy0iiiBUEiAgMRyIEYbcwhr2d9cJ4VCY1FkO3TNqmCTwlIOZxrp5e9OYRpHYVS3q0
      gj+N8/depv+/mUkPWHh2DbFHGd878J7C3mF3aBNYEwSUMATH7v4BBYGUohAVRVqex1yrjSgK
      HMskmOhXOZQ1WPQM1pQUcVHC9Tyqk4cQNQ2DEEOP0Gg2kWWJWDRKCER0HZEGRlJnNBFhqK9A
      eniIpaVFVE0DIBqLYrS71EOSZWKqxtraGrKs0G53g84jkQiWaRGJRDhz+sxOjHUiHudPv/EN
      EAWOHT1KPpcjm8kgyQr9Q4OcfzhHeG+GF/sKuJ5HybJ4Z2ODz+RzDBgGA5ZFbm4W9eVPcGNm
      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
    </thumbnail>
    <thumbnail height='192' name='DataDef' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAbaElEQVR4nO3deVRV5f7H8TcgIgqKAiLOoWHkhKICKnCcpRxSUyMrK1IzU7s5NDhhaVqm
      V60cu2ZqpjlkWqCpiVOWiqIm4piKEzIo88z398fBowSUVr/uWnd/X2ux5Oy9n+f57r3PZ+99
      UB+sRERQyqCs/9sFKPXfpAFQhqYBUIamAVCGpgFQhqYBUIamAVCGpgFQhqYBUIamAVCGpgFQ
      hqYBUIamAVCGpgFQhqYBUIamAVCGpgFQhqYBUIamAVCGpgFQhqYBUIamAVCGpgFQhqYBUIam
      AVCGpgFQhqYBUIamAVCGpgFQhqYBUIamAVCGpgFQhqYBUIamAfhTUsFkKv61eN1/r5xLMdCv
      F/R6FgruWd7PdLe+Xv1gx4F/qCCB7V9D9PmyN4k5BN/uNn8/fBAs3/LPlPYbGoA/JQ9274bg
      QRAWZv7q7PffK2fTSjh0Hsa9Cjb3LD+wG9oFw5TJ4GoFvXpBav4/UFAydO0L11PK3uSFEDh8
      2vz9S6PA5PMP1FUKUX9CogiIhEcVX5ydIvLsEyLly4nUrC/yZYR5+Y9bRRrWEbG2Fek5SCQz
      TyS0l0jISPP68aEiQSEieZkiA7qLlLMWqVRFZOLs4v0X5ou8PULE0V7EyVVkxkKRuChzLWDu
      417uiKwML6phk3mbs8kibRqItGktYmsvcvKyyOA+IjbWIo28RQ7HiqTeEOnoJ2JtJVK1usgn
      q819LJop4lRJpFp1kYVrzMuCmop0DRZxqSJSvbbI/l9ERobcrenQWZGnHhMpZyPiWFVk3kqR
      lbPvrl+8wVzPlMWl75+IuT+/AJF67iIOVUW++O7vOY0iogH4U4oC0NRHJCjI/HUzW+SD8SIP
      txJJSBHZtFSkvKPItVQR75oiE+eK3L4u8kyIyIlfSw9A7G4R7ES+2Sly/qxIwq3iw4YvF3Go
      LnLmisiJfSJ2NiK7fxGZPV6kaVDJMt0R6TNIZPIkkZaNRBr5i+SJ+Q3XurPI7gMiKz4UqdtM
      JCVDZOJQkYC+IuErRRxqiOz5WeTsaZGUdJEbMeZg7j8tsn+TiG1lkaQccwA6DxDJzBTxbSjy
      ymQpdoHIuCWydKlIcqrI8P4izTuZa7vzpr/3+7L2b2SISAMfkVvpIs89LhI44G87k+X+O/ed
      /xGDhoHvw+bvK5eDY1HQ3gQulaFHb8gdAieOQ+w1eNcfqtSAlavL7u9hP/jXYHixL6TmwuCR
      sOR9sCpaH3UUvFrDw7WAWtDQGY4d/+M6rawhdAwMGAh3znj3vhDoB28tg5Qb0Osx83JXDzD1
      gCe3wOMmKCgP48Kgc33It4I3h5ofnNu2gMSiR5yWvmBvDx61ICe7+NgFufD9JlizHvKSobBi
      2XX+3v419ganSvCQB8Re+uN9vk/6GeCvaOZz90OmnQ008YZ9kZCYCt9+A+UrQ9Pm8EhN2BMJ
      qTfh0Ydg8z6wrwgXLkB2BkRFm/tLvAmNWsGZOFj6Dnz6b0i9Z7zmTeHUITh7FX7ZD+eSwLv5
      79fYt+hzyitDzMG8w8nR/GejhlCxGqzfDONGwshhEH8D2nWHa4nwxmD4aBE0aAg2BTBpLiz8
      EEKHg4dLGYPaQnnMYfh2LUREw8aN8HDNezaxhdwcyMv7a/v3F2kA/k6jJoBfHajtAiPegy/W
      g7sDLFgGX38M1WrDw+2hsy888zxc/BHqPAy5RZ9c7cvD1vVQoyq8Oh2mfABV7un/8edgRD9o
      5QmBfWHaIgh49K/VHDIcTA2hZlUYOg7ScsDWBlYvNodk/lcwfSq4N4E5YTAwAFp1gpjLUM6q
      jE4dobs/PNkBbBtAXVtwrwnpNnDlMuQWQtfO8P5rsHDD/+/+/QErEf1F2cq49A6gDE0DoAxN
      A6AMTQOgDE0DoAxNA6AMTQOgDE0DoAxNA6AMTQOgDE0DoAxNA6AMTQOgDE0DoAxNA6AMTQOg
      DE0DoAxNA6AMTQOgDE0DoAxNA6AMTQOgDE0DoAxNA6AMTQOgDE0DoAxNA6AMTQOgDE0DoAxN
      A6AMTQOgDE0DoAxNA6AMTQOgDE0DoAxNA6AMTQOgDE0DoAxNA6AMTQOgDE0DoAxNA6AMTQOg
      DE0DoAxNA6AMTQOgDE0DoAxNA6AMTQOgDE0DoAxNA6AMTQOgDM0mLCws7EEa7Nv6FUOHj8Ld
      qx0etar9xeEzmR02ne8jI4mMjKRWo5Y4O9oV2+LMz9tZf+ACrRo3+Itj3Z/C/Gy+XL6Cek1a
      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
      3vtjmVdyRPjl4E6+PXQDUyvzhJ+WzwABvtgA8VcuEBdfcuq9TgOG8uOGJaTnln6KEq9f4uK1
      u8dmz44I0vLL0avPk1SzzeLObI1L1m0jYsvXPNnNPGfphdO/kJT2+59vPLw7ceTIYepXSCP6
      1AXAPCPfvVfs32rk6UX45i0U5OeyJSKCRkWzqB2Jiir+JnOsbr4DhoXhVd88B+eYd+ay/ZsV
      7I7YREpmHhTmEBV1olj/5kegSL5YthDP2qXP558cf4Xz90yv7unpxffh4WTl5hP+7RYe8fQs
      WmPH44NepptHAfNW3v9F5s8qMwCVXWoz9o03adrg7tyZrbqF0P0Re3p070b4L6lMf2O4ZV3P
      F8bSy7sa/Xp04+0ZCyisUJ05YSN4YWBvlu84x/sTRlLfJ4Dy8QcZPHwsLnUfwamiLe71G1om
      cr0zdWG/518mfGkYb3/4KQ7V3PCoc/dW36hJM+ys4e0Zs4hY+h5dgnsQvucoVoU5zJoyluA+
      zzB67EQgn/kzZ5NVYs9scbVPwdShI7OWfs2q9eupbGuFWx0PVs8PK/YhePKYV7mSfLcHtzoe
      uFVzwKqcPSOe60FVd/NJq+PRiPlhwzCZTKzb/jPT3hzNhfg0S7vc9EReeSGEPiGhvPLOXNwq
      QEMvbxzs7jn8hTm8+vJwsvKLP1rV8WiEW7WiX4hhbUcLby/KV3Jm9Vdr2LxsLr/GJzP65WGk
      5dx9tKrf0Iv3X3/G8mH2pbHvYnvtJ7p0DSa3hj9D+nXg1sUjjJ36UbGbQUvvFsXGdqvjgbuL
      E606Pck7w3sxc96nRG3/io/WbC12PL1bNilxlMEWn1bellcfTh5D7JVky+vWwYPo19KZnsFd
      +frQTT6YZP7hQJOW3tgCr02dQ+yujdzKKuMXNfxdSswrrUREJC/tuixdsfGB2xVkJcmiZWse
      uN31Uwdk4w9HHrhd0q9HZU34jw/cbtvGVXLuRsofb/gbq/6zWFKy8x+oTWFemixcuuKBx/on
      6NSIytD0L8KUoWkAlKFpAJShaQCUoWkAlKFpAJShaQCUoWkAlKFpAJShaQCUoWkAlKGVEYAC
      MlJSyM4rLH21Uv8j9B/DKUPTRyBlaBoAZWgaAGVoGgBlaBoAZWgaAGVoGgBlaBoAZWgaAGVo
      GgBlaBoAZWgaAGVoGgBlaBoAZWgaAGVoGgBlaBoAZWgaAGVoGgBlaBoAZWgaAGVoGgBlaBoA
      ZWgaAGVoGgBlaBoAZWgaAGVoGgBlaBoAZWgaAGVoGgBlaBoAZWgaAGVoGgBlaBoAZWgaAGVo
      GgBlaBoAZWgaAGVoGgBlaBoAZWgaAGVoGgBlaBoAZWgaAGVoGgBlaBoAZWgaAGVoGgBlaP8H
      Nm7Xr3BMd8UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='LR.F' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='NeCa' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29eZAcx33n+8msqr7mngEwGNwXARK8SQAkBZISqcMSZUtaWbZkWWv52VpK
      T+sr1n7v7Xpjdx27G35vHSHJ3rD81l7JckhLiyIlShQp3jdAASQIgMQNDK7BAIO5es4+6srM
      /aN6emYADEgMTmLyE4FAT3dXVVZ1fjPz98tf/lIYYwwWywxFXu4CWCyXk0smAK31pbqUxfKe
      cS/2BYwxGGNQSmFHW5YrjWkIwPCP/+NbzF6wklvX3sGj3/suK2+8iXXrbuFnP30aLdPctaqG
      gaa1HHr9ab70la/gieRIIcSFLb3Fcp6cuwCMoaG2icJgP4VSSOOsJvp7+zm4/ZfMvfk+xN4n
      2NMZ8trD3+Q3v/5/kXYEIDDGIKU1OSxXFudcIw1w14c/zr03trHh7YN88lOfZ54zSHecZSTf
      R340pKnG5YMPPMDbv9yAHfRYrmTEubpBjTEc2LWVjt4y99y9jt1bN1NyGli/9kbeeeN1RMMC
      FjcaSum5jHYdYPGqm8mlJEopHMe5WPdhsUyLcxbAdLECsFyJ2EG5ZUZjBWCZ0VgBWGY0VgCW
      GY0VgGVGYwVgmdFYAVhmNFYAlhnNtGKB/ufffYO5i6/lptvX8uITj+EHhs9+/lM8/tNnUMJj
      /apa8s1rObjhab781Qcr8UAWy5VFGPjTiwad1TSbwkAf3R27UHUruW9FN99/6KesXv9JxJ4n
      2Htc8eqPvskX/vDfkZLJLLANh7ZcaQz1904nFkhzousk9O7kid0lVDnimlwfavYKBqIG4kMb
      mbeklSFvISeOdfMnX/0tBDYUwnLl0dfVOZ0eQOAP9XB0uI7f/8LHOLZvO33hDdx567Xs2LIJ
      seI3WVivKadbKSw+SDnU5FLW1LBcmdhgOMuMpa+r03qBLDMbKwDLjMYKwDKjsQKwzGisACwz
      GisAy4zmoifGsliuNIzRqFgBVgCWGUgYBIwO5gE7BLLMUMbmf6cpAENXZyeR1nQdO8KBA+0E
      ytDXfZz+oQJBcYSiHzE0MIDSNgDOcmUhEIxlbJuWAHoO7+C//Pu/4sToEA89/DgAQ8d28thz
      b/Kjf/ouW157nJe37eV7/+sxmxnOcgViMJWaec42gNERj/7sRdbctJyir7j1xmU8/dgjLFux
      hAXXfQCx5xjH+gOef+TbPPgf/j8cYcOhLVcWSimM1iDE9NYDrL97PS89/gT5fD+ZXDN12RSt
      K67jrbc2EY/Abdel+fUH/4hXf/xP3Ppv/piMmwTB2WA4y5WAjiv1UIjpR4P6pRJeJkNheBAl
      UzQ31DIyNIjwcmRcg5IpdFAilavFlcJGg1quGEK/zEBvN9JxbDi0ZeYR+mXyPSdxXNe6QS0z
      D8N5u0Etlvc3RivAWAFYZibGGIy2ArDMYLTWVgCWmYsxtgewzGSM7QEsM5GK49/2AJYZSqIA
      KwDLjGdaAjA65vknnmI0jtmzbTOvbd6O1jFbNr7MWzvb6T9+gGP9BXa9vZ1Q2QA4y5XLtFaE
      7XnjZV55ZQsLb1vBy9uPc11NH08OdlFgDuqdJ8gvaGFQzmVkRHH9Lbde6DJbLBeMcxaAjov8
      4JGncJVm984dpLINtM7y2bb7KKvuvBa6BUNFxWubnuMzv/eHYAxKaxsObbliUEpVX087GO6l
      H/+ElR//KK88+iOKgeGzv/Epfv7Tp9EyzZ2rahhsWsOB1x7nt37va9TYneItVxBBuURfVydg
      k+NaZiATBWC9QJYZjRWAZUZjBWCZcRgAkexbZwVgmZGMbdtoBWCZERijK4tgxrA9gGUGEQXD
      hH4+mYsyptoF2NyglplBxds/nO/D9bzq21YAlhlFHIVAkh7RYIdAlhmIiuPqEMgKwDLjMBMy
      1p77EMhoNr32AsdP9rP2vo+z6RePUd86j/X33sPLzzyFybZw26I0Q3XX0bXzdT78yU+RdsS7
      n9diudiM1XtjkgzRTEcAQrJ69Y2c7PgpnSf76Oju4cZ5y+ja8Sqi7WbY9wzbyw3sPrKVG+64
      n5RMVt9rrS/gnVgs54YxJnGFjoW+nY8XyEtnmd86ixPDEf/3v/1zXnv4b9kyMIv6BUnosysE
      NbU1jI6MVI8RQiCE7QkslwlBdfY3EcE0ewCtQzZt3MBIWXLLDc08+8QTjKQX8/lf+ygvPvUU
      ZulablmQ4pp1Kzm5eyOlyFCTksn6S2lNDsvlYWzII4TAGFOdCbbh0JYZQVgewOiIkeEIYzRa
      xcRRZL1AlhnIhCGQFYBlxqCUZuL2SGAFYJkhGAOD/aMYrVGV2WCwArDMEMb2BAgDH61N8o4Q
      VgCWmYmwC2IsMx2BFYBlpnCas9/2AJYZxZmnu6wALDMSYcOhLZazxAKpQg+PvrCFfa8+wQ2f
      /Fd87iNrkg8q4dBHDh5gybpPsPf1Z/FDzWc//2ke/+kzKDzWX1tLvnktBzc8ze9+7as2HNpy
      RSEdp9oFTCkAf6SXR7771yy/+V52v/P2uACEZMnChbyx6U2WlDrQDau4v7WbHzz0M1bf/UnE
      nifYd0Lxyo++yRf/6M9JySQOyCbHtVxOTg3HH6uLUwqgZu5Kbl25gmU3XEO6cdn4gTrCqZ3D
      Z+6/lWcPjRIVfDrUADfetJJ8bw/RcMiCpR4f/vS/4K1XX+Ce6367GgRng+Esl4t4QiTyxND8
      KQVQ6NrLcWazcOAAe4+N8rmP31E52qG7Yx89xUa+/Lk7OdG+g/7wJtbdvIqdb21CrvoCC+oU
      5fQciksOUw41uZQ1NSxXDkKI8fDoKcOhdchD//PbbG3v4St/+KesXjz7vC5qw6EtlxO/mKe/
      ux8A1/NwHJcw8Kf2AqnyEF7bKhrNMPsOdV6yglosFx0h3j0rhD/UzcPf/WtGM3PZsX3rpSqa
      xXJxmDDOEYx7Jac2gufdwINf/j8IZIbmhdde1LJZLBebSeP8CV75KQVQ6t7D9x57lrk1AW23
      /Tr33H7dxSudxXIJmTgrNeUQKFXTxMce+AzzWhrJZtOXoFgWy6VifBA0ZQ/w/R/+mM99+Q9Q
      9yzn8U0nLlHBLJZLxbvMA/Qfa2fTWzvg+Cb6CvMuWbEslovCRCNA8O5eoK//6Z9zYPMz7B+u
      5f/80q9e3MJZLBcbceY/puwBUuksH/30F1i2eAEpz05gWd7nmGQCTMXxJC1MKQAhBJufe5S/
      3LiV2z/x2/zJ73yqciLD/p1baT/Ww50f/BBvv/IcgUxzz/0fYcemVxD187hmlqCQXcTQ0d1c
      v+YOGw1queyYyiL4U5lyCBSOdPPDnzxJy+Ib+PgH1006VeOchVzbEvHUy9t4/rXNtC2+hqH9
      GzihZtGx5Xm2vv0Wm3/5Kts7RknZym+5QjhTTZx6CFTfyr/84ud55qlf8MgvVvIfv/756mkO
      7XidvXmX3/nN9fCJO3nmn77Frtw8GpcthjSMlhWb3tzIA1/8PTBJwlwbDm25nGg9nhk62Scs
      eX9KAWilydY28mf/+Zu0zR33AhmjeHXTVm64/S4OHz3CoV276RMtPPArH+W5XzyLSS1k3bIa
      Ftz6AId++SSlm1dQk7Lh0JbLi5ROJQRaIKRAineJBi337efBP/srPnzvDXQM1/Gf/s1XzqsA
      NhrUcjkpjfYznM+jNaQyWaSU+KXS2WaCW2jOaH76s2e57sZbL2VZLZaLxMRVYe+yIuytLW+y
      9u77uClSLJpdc7FLZrFcAsRpr6fsAVrbFuHpEj//yY/YfbjrYpfMYrloGK0ZGRzhTLmBpuwB
      fvaDv+Gpd0b40pe+wi3XL5vqaxbLFY8xhjiKcM7gkp9SAL/y61/hhg+OJl9y7Jpey/uXcT/P
      +MYYY0wpgOtuuQO7AsByNXDqzpATJ4Rt02656jHG4JZ8GtrHw/ptakTLjMAYQ+QPIKMYb7R8
      2udWAJarniio7Fd9hjlfKwDLVY9SAoxBTBDA2Ktz3yneaDa9/DwnentZdcdHOLL1FYYDh3/x
      mY/x1M+fQqcbWbMkw1D9DRzf/iqf+OznbDi05bJitEBok/QAEzbJhmn1AII193yIBlFi/643
      6fabuKmlzPf/+SekF60hM3iAd9o7eOwH38FbcGM1Oa6NBLVcLgyV1l+P10FB8uc59wAGw6Pf
      +/9ZtO6T3DVP87+e3k/ZD6mtrSMKA1SkyLqCxcuW0H3iBLAKKSVxHBPH8QW8LYvlPTAW+qxN
      pReoLI55t+zQZzuhyNQwdHw/PS3ruGlhmt5gOV/81Q/w8nPPwep7uL7NZTS3nN79b1CKDDUp
      iZTSRoNaLjmmsiu8MKY6DJqYHXrq5LgXGBsObbkcGGPo7zpIek8ntT0DdN9xPem6WoQQFAtn
      CYe2WK4WUsNF6jp7EVpXhj7jbb4VgOUqx+D4YeL5Ufq0gFArAMtVj+uHyQsDQlV6ARsKYZkp
      VK1cAanRIioeD4mwArBc/VQEYIRAKIW1ASwzimoIhJSIiUsDsAKwzATG8gFJUX0tKkqwArBc
      9YiqAGQyGZa8C1gBWGYCYwJwxASL2PYAlpnCJBsgeR1HRcBMIxYIw7bXn+OZzR38uz/+En/5
      X/6KW9at4/ZbV/PoY8+iDXzgujryTXfQvvEZHvyDr9twaMtlRVTmv4yU43MAlRihaQhAcNv6
      u3lzWxdaw4qVy+g6dowaCixd91HE3ic42O3y8iPf4nf+7D9Vw6G11u9+aovlQmN08k8kRrA4
      ZT3AtKJBlU4qtNIRd6z/GLtf+iHlbDP5ruNEgwFLlzfx8c9/kU3PPskHrvldHMfBVKLwLJZL
      i6hkQxHgyGQRgBnfK2B6Q6DNW1m2aj4dPUXCwU7a7vg1brt+Oft3bEXe9mVaczFBqoW1y2bj
      x4acl4SfSmlNDsulJYl9MxgpMULghhGBEIwZwTYc2nJVY7Qiev4lnL5holl1pHuG6b/vesoq
      DVpbL5Dl6kcogzAQza5DZTyENoQ6aYytACxXP8ZQam0iqs2CFJPWBlsBWK56hDEU21qIcxkM
      AmfUr35mBWC5+tEmafkBhMAZKFVdoVYAlqubY12IcpAEwkH1/wRjBWBJFo4rpS53MS48xiB2
      H8Ap+tUewIgkHmgsUboVgIWgXGKg5yrdBUhXhC0qVX0sI1YFKwALxpirM3OfMRhtMEIkkaCA
      31SP0MbaAJYZQCUXKFImoQ8C4mwaoTUyTnqGaQjAkO86zHOvbsYYzRuvPs+Tz71KHAe89Owv
      eOn1rZw8+DYHuobZtOFVAnUVtiwXCK01cRRe7mJcvRhAa0rzWioRoCReoCBiwdadRLEznVgg
      KPgl9m/fzfrVzWw7UuLmhqM88tNevJZV6F0vUuppptdvx821cqe8irvY8yQolyiNDtMyd/7l
      LspVSmLcDy1uQwqBEAbluThhhBNFeMOl6YVDL162FM/Zgop8HC9DbS5F/sgQi+ZnMC74oWbv
      rj3c80Cyy5jWOmntbHLcSYyFiV/u56LiONlJ8Wr7faIYY/Qk16dKe7h+gNCG2Uc7prc/wOaN
      Gxgc6aPLb2COt5PtvSm+/Nu/xlM/fxpdv4I1y7Isuv2THH3zWUrrVlOTSuIubDDcZBzHQQiJ
      606rI65iqgu9pxduXhwZQkhx3uW44lCa6JQlkMZ1ELECA17Zt9Ggl5NysUBxZIhZbQvO6zxh
      OY9WIZnatmkdf7LjEI7rMmf+4vMqxxVFHMPmbQQnu+m7bRWOY3BdDUrQ8spOhNJ2HuBK4ELY
      R0YrjL4KJ7LOh0IJ2o8kyyCBJCGQIJ2VaCmT9QFYAVxejCEM/POahFJxMHayC1Omq4WyD8ZQ
      nt0IjCVBMcmCMCnRjoORcnpeIMuFwQBGa+IomvY5SsOHcVN1yfmmsex0zAC+6giCxAvqTazi
      gliDlg44gLA9wGVm8g7m0zvF2HY/hvLwUbQ+N0/OQO9J9NUYB1QOiJfNxW+pn/CmIVBJy69c
      D+1Mcx7Acv6Ysb2rAHFeChg/n4pLYBTnstS72vq/zzuBk/1DZFIe6ZRLLpOGMETXZDGTHC8C
      g0C5LtpzkVpZAVwuhvN9FzBJwPu89l4A/DAmihU9+ZBlC2bjKY1xXajGfUJlezyMIwnmNJBP
      z7dDoMuFXyqi1DQnnrSGwx1n3Pl8pqKUxg8itDEc7erHL/vgOEw2iQQgKDQ3EzTUUm5osAK4
      XBijmfboQ2l4YztE0xOQVorhfN8k4zcJm3n/JS+LYkXvwAhKKWKVlD9WGhWGqFOebKQdtBEM
      LJhPsaYeg7ACuFyYiZu1nWtLfrgDE0WooFB549xsCK01xZHhSdeNg4j88V5G8sPnVpYpMDom
      LA8Q+UNoNX0v17sRRTH9QwWUHn+WngkxQUg4wbg3BkqRR1TJBqGROK71Al0WTCVOfVpD91IZ
      duyFWBEXBph8kvcuBINhdGiAKBhfIK6Vxi+UplGo09EqIvIHiMJhtPIvmqtVn3JegaFhsJ/0
      8AixriaAQwiBQaL0eFIsN32e8wBGBXzn7/6eectWcNcH7uDpJ55Cp+pYtzzLYMPNdGx5ic98
      4bdsctxTMQaDwRhNKu2h9XusHMbApq0wWkAA7rYD6MWNsKj+XQ8907nCYLxiCkfgpVNEfojR
      GnGeBroYKSJihcim0CokCrrI1l34qFc18dkZg6Nicv1DeMUSUTZT/Sid0QwVHbSRSKG5IPsD
      6Cgk0JqRQpljOzZSd82d1Jc62Hmoi4f/4W9puvbOanLcSzXZEvpl9BUeFqBNslOh1hov5aJ1
      9N6GCYUidJ6AW2+AdBrZP4ooTW89wamTZlJIGlubcVMuSp2/LSDf2o3bM1K5lsao81z34Puw
      +8Ckt6JYVcsqBGRGR1m4YxfeaAnjSFQ1uM8gxHhfKSr/tI7OrwcQXprf/f2vsfWJ77Cnvw23
      oYjyY+oaJbffuZZD+/bx0duWIqUkjuNLEm472NdDrr6BbE3dRb/WdFFxUtmDcgmnNgtGE8ch
      0rxLT1kq4zTUo1avRLgSuWUHItYoo6vj+SgMEFIhndTU1694nyYNH0RiG0jHIQrC85uc0wan
      P4+odxPDWqvzDrcWG95E9uVRyxaC5wHQ1TdEHEZ45TKN3T3UDg2SGUnsoqgmg5YSh4lirrT6
      wqABY85TAEYrtm3eQHHWjfzGfXex6ZWX4PaPsGq2pJBbTP7Q25QiQ01KIqW8NNGgQuBI54oO
      7dUTKoKsxKoLYDjfS/OcNsojRXINtacfqDS0NOGmPVR9DpNySeb2Q4RMYYxgqL+bhsZaUnXz
      pi6AOd34ToLyNFrHaKUrodrTU4EujIJSuIe7iZbPRnpZtGD65zx8DE72Juc80gnXLAXPS7Ke
      D46weM9ejAAvTDbEDmpzDFy/BCMksRYINMaIag8ghUELMJznRJjjZbn3Ix+r/n3vRz5efd0K
      LJ977/mc/qol8EuMTdCIyv9aKYJSCaMNo4MjZOtrJlcWbRID2PNQUZlSTRn35vk4PSMwMAwt
      zRgDUagr0z1nZqL3KSiPG7wqjhjq6yEsh0R+TCqTxkt707o/NdSPm3IRpQAxXMDk6pJrGo1B
      Tr6v4yfhaCesuwVSp/RapnLPu/ZB2xzwA9i8LRHDzauZs3sPRccl5fvJohdtMFIwtGwBcSad
      uHZJwn76yzVjJ0VVMkQYY2eCLzlahfjFIaQjKhk7ksqoVAQVw5hKSu+qC8OYpBJs3wU3XYfW
      EaBR9Wky24dx+woU709X0jydvZc91f05ERVHCJkMlkM/mLYApB+hm+vAATFYgLbE4+UXukhl
      W3BCAaVS0rIbDQcOJ2W6e10i9GIRhhL7gRc2QE0OHrg/8X4NDkHHcZSUZAcGyZZ9omyGkfnz
      aDpylMFbVhHU5RBm3NAFKu7PSmODwBMx8fS2SLKcDyr2UXGAFA4ak2zXqaHceRyyObRO1gdo
      pTFjQ5E3tiWVRClMOkU1uLcmja5NI0d9UObd6j4AYeBTLowipXOasyCOIhzXI1dbQxye+3jd
      GAM9fcite4lWzCVuy+GdHCE2mjFxmyiErfuguxcKJXQui1i+BHGiO5nY2/gmnDiZDPfqk2Gg
      WjgP6TiIBW2QTkNnF7qrh1hKynNmU1y5nACFowPUrCbEBNfueOFIkmMZAIGDRolpbZBxZXOl
      OFy1CoiCEYyO8TJNOG4GYwwjQwVULKipNaSytRgd4AYhdbuO4q+5DlOZjc139SUicCSzuvsw
      KY8oW8+gH1NTLDBcytGcLRGubCW9vxe3pFC14069OCriuFmG8/00tMwGkhZeTRV6LQRCSOI4
      olgYIOXVnHN4tVYh+p1tuGWfaHYalEYW+nA6esDViLyPc6Q3SVIVRcmwJQyJ1t1E6pXNsHkr
      HO1MOsC5cxDdvZRvXE0plyMzNEq6oQHZ3ERck0NufBNVk6Prumupz6XxSgMUFs4hLSWONCgl
      kMJM6uyEEBgDjidwpcATdj3ABSVpucNk4kcr4mAIEDheDdJJURzpp1wYxRstI+tzFePM4MQK
      1w+RsUKrGCEluYZapOtwrHeI5igiyNXQd9vNSKEplwv4Ksl0HLY2IPtKZDYdRF0/HxqaMVpR
      HjlGrmE5pdFhcrV1CCHpOX4UAC+VJg6j08quTLJGSsURgSoxkh+iYVbTe7t5pRA79+EOBwT3
      3YjOatAGEcZ4W9pxMh4yiBHaYASoB+7HP9aJd/REcv3GBtjbTlxbS3luK3F9HVkhKc1tRboO
      hcFRisNFfMBxPMSypcR1tThSUJdNUSxLtNFIKSubYAtkRQhjabCEACMMnlQIKWh0XSuAC4WK
      SmgdE5Z6ATHZDRmGBKUBhgYGwEDz3qPoYBZypITwI7zAIGJFrqufcp3EyzaTqslSDqIk8E1r
      BhbMI4oj6kwR5UhcEzNcTOOIJPw5FSn0YAgNgpGhAC8liPJ5tNbku7uQEzxwjuuijUGdkpNo
      4vZx2oSUioPUt1RWVL1bT5AfRL69FzWvBdNUC2EBLR3CbJZ0KUL6EVEug055BI11RDpE1WVJ
      tbXg+gH+0iVkimXUNcugtoZsysW5dhktKQ+lFPkTvaRzaYYLZYTWRHNbk0ksbSiXStXJxDjW
      CJEMLaUwhHiUyYAAITRSGFwxPlK4KgVwKWMkE/ehIij2IJ3UGYcNZt8B4mKIaJtDquzjhBHu
      7hPobAoRxDhaE9TVUn/4BAOuR8+8WrLxAPFoicU7dwOCoKGOjC6jMejY4BEhlEYDcdrDeA6Z
      /mGimizl2Y0oBcaMIIRAqRiDwUuniYKQOIwJYjW2KKr6zCpzwtXnp+KIfHcXdY1NeKn0JBGd
      xt529MJW/OUN6HAUIV2CoiFY2Eq6uY6a430Mr1iA8VzCmiyUiuA5RG2zcAZG8dJpnNtvorbp
      9FltRzg0z5uNBoQfEVWyurmOxCEmLBWSyE8tKKuIdMW75shKPiwhAZMYvqkSjqxc42q0AQzm
      kmVb0ypC65Cg2FN55BMC3KDaKhm/TKq3QEM5oqZnkKipBjW3jr7sLHI9A5QaG9FZl+aukzQe
      OQ6liKG5rcw60UW6XCZoqCElIhzG0vnpyr0mVy22NKE9j6b9HTTt7yBsrEF5Hql0BgNEgY+X
      SgPJMMCPzzTTm9gASYjGuCz8UqFqLM+et7Ayjj5F5AND0N2HuetGdG7MtSqJY4VuqEE35yi3
      NqFcF8cRCCUmRQZ4GRfpamrONPdBZewuBIeP91Wfr+tIpOsg4xKe6+J4HlFQxnVdwsggSUTv
      Sl1dEuAIRUPKI54wLXzVCSBx4ZUvybasfvEkjpPCaIWQbnVpIkDgl/HLCq0FjSVNrlDGK5SJ
      GnIMLlvAaH0ToXIo19VhEGRFyNDy+aRHRmk+foKmrpMIYxheNp/R+bNwiSe11giBMYkAlOtS
      aG7CrBbUnMwze3s7o/NnE89vQWSTSiWkQ6nkI4whwsE7Qz/puQ5KhWCSSqdN4i0J/TJCCMqF
      UYSUDOd7aWmdjZAS16uBt96BOEY31EA0LgBQSUpOCcpzkzQkMvHMGyOrYQxR7KMCheN51NY3
      JkM0bapeYG0MhVKAMQbPdYiVIpP2CIISXhzjZbOJEQ94BOjKTG9ZZHGcCOLkfqQwZFxJUSV2
      yDQ3yr6y0CoCIZDSTYYjGIJyiTgM8dLpC3698ZYrWYtrjCbwFVJqvFRMHMUEgSaKxiJOQPgx
      xYWzUZ5LvGIWZZUjVC6ua6hxDSlZAqWJhSCuy2Fcl6Auh3EdgsaaJLnrKb57I5MYG3RSqbR2
      CBtqk0Xgh0/SePA4qrOH0QVzCdqaGS36GJIWTzsekRG4p60fjitRkwYpKsajSSqpNoaB3pNI
      x6lM2uVxpYt7oB0Gh4kfuBs/ymNkmnIsUMXxGB0pE1MGSAxTbZJ4qMpwK44jBDA6mCeIFHhZ
      Sn6I5zpEcZLyJYo1nusgpSBlBCoskIn9JK7Hkeg4rPwmISkp0J6DSEnKcRZiSDllpIyBsbmN
      ae8TPBWVTRaEREKyEUElqvBitcTGGIJSL6Wyj4kgV9eUPGljiP1RPNcDJmQHPsPx8O4G3tj3
      tPKJ/CGkkyLyBzFaoaIiKhZExuD7BqUquw9KSOVHSY2W8Ipl8isXENbk8OMUsZF4jsZNCZR0
      MQgiHGIDg8vnIxyBMcm4VTsuHjFaJS69MUNVCw9BMtTzpEGhQEOcy9B3/Qrqu3tRxqG5oxOv
      VKLQ0owbRahcCuMJRBSjG1JIHVdqqSBCYqTA1SFKgEYk6XSAmKQcKlZ4pTLOyZOkuodRSPTK
      eUSiDGh8JSnGKby4iJCiKgDHSeYdjHQokcHRES6KSkNcHZL4hWEiSmghKeNigJwpI3HwZAoV
      RTgmxjETYv1VgFYBjiNxPZBCIxyX0AQUY4NMOTSn/cqTS5wTguSaFywz3GjPQf7x0ZfRUchd
      q+vJN63jwMbn+dd/8q9JSXFBM8MZY1BRiWKpiH+8m3T3AHUn+xAa4oyHEyQtinDdJEPYgnlQ
      X4vIZSGbxTTVExqNlgItBbnaeow2CDk+vq1sJAJGE/qDYAxBeRBjHLSOCXyN67xPx7MAAAuR
      SURBVBjCSCaNZKxJxRHewChuGJEqlBHFAGEMQwvbGFnQSiAygEJKQ226QGAkSrtIJ1cNiXD9
      MtpxQUdIpYkdjWNACYOrkrGrQCA9gcZDxCHaTYHRSco/DLH0cLQidpI8mM3tHThRjKMVblgJ
      dDPJ98LGGsK6HCBxah2E0fheFiUdXBWj4sra2kCRCn1Sw0Vy/YNEuQyFxa3QnMPNgTGCWAlC
      5aKjSq8hJVp6uI7BdR0CP6asUxgEOVHG0arSgicLVIQas21OZ0woUlTcnaLS1gFuWhFpgUgZ
      ShVdjO0B4wqDwaHVSxoIEaWSRifSSD++cALY/dKPOVJ3O3LPzxlyannxla38/r/9r9y1vAmt
      9Xgrqse6RnG6t6SS4sPZfwjpB+PvT/oS6NAnGhxAliIcpYga6ym1NqMkyDAmymZBaFw/QrkO
      6eFRUiOlpHULQlw/SnYOcV1wHKTjJhNQjpP4qLNpBAYZKYjCimmrMSrptI1O9p2thisYU/3x
      SvX1hNksUU2OQmNj8rHrgoC0UTgiRBqDVzGQZWWGUhgDQmLG7DNtqj+iqQRvYZIMxxJwXYOU
      6cRAlQKDgx8rtEkW+kkEWiiEMVVj2UXjVpLFiljhjAaI/DCuH+CGcZKdQojEp1+ZhKu2BJVk
      Un5jLUFDDeWGumrZZOUXMhUZayQGQUAaEDhGY4RAGkOqYsh7QqNNBAI8nfQ8sYmRJrFXxoaz
      EoEiSWM4FsyASSwMQ7IDpJZJ4rexjmTsM0eMJYQTuNqQXHpynbtgAug/9BY/35onOrGTlStb
      Gam9jn3btvKnf/wgbqUHeE9ZEIyBo50IPwDEeOpAQWWTA5FUXClQ2QzkMslwi7Fhsqk+iLF/
      1XZl7Mc0JnlwRuBGUTJFrjQyipFKIyrRmsaR1fG3GKucQiRp9SoJl4RIehEjJFIIdOX7yRia
      SsUeS31ySnwPlR+7uo1P5Tumcp+V8fdYuU8z7KvdFBWjOBGKw8T35WnnGb8WKJJ7E1pXWtnx
      Z0TFfTgmdGMS41GQqFRXmmU1ZqwKJ/mZjMEZc6oaXbnzSuBf5R6MSQLXjABHJc9IC4kw47MR
      FedN9drV11onz0Gc7T4n/OZJQRCOpNrCuG4i9AuXHNfQ0b4XUddKS0YTuvUEwz00ti4g40qb
      HNdyRWKzQ1tmNHZRvGVGYwVgmdFYAVhmNFYAlhmNFYBlRnPJBHDqHIA6S076qXJUni135VSf
      XarrjO2Eea7HnMkJZyo5g87E2XIsnev13+0653LMVPdytuuf7TrT/Q3O9TqXzA16KlrrC5ge
      /PJf53x3anyv6Mok0KW4ztX0+0x1ncsmAIvlSuB9awPke04wVPDRKuJYx3Gm7vwgCooMFyZn
      CigOD9B+6CjKGIbzvRzv7p/y+NHBPg4e7iA6W8pAYxjID0yKWjYqpuPwQQZGiqjI5/Chw4Tq
      7O3NQD5/1nvRKmRwLGVIhaA0Snv7QYJYY3RMfvDMGZ51HHKkoxOA4Xw3AyNnT4Q7MDAwqSzG
      aDqPHqJvcAQwDA/mOePaGkDHAYfaDzBUKJ/1GuXCEKVw8vBksO8kRzu7MAb84iiF8tnTRvqF
      YYr+2bNYnPFejhzC+Yu/+Iu/OOuRVygP/e032TOoWOjl+X/+8iE+dPe1vPj8i/SXoX3vLubU
      CnYcHaS1KcsvHvo2bw/WcMuKSrY0E7Pz7Z2Uu/fw6r48m17/JYNHdyDnrmZ23SnJmeJR/u7v
      H2Lponmkchk2PP8Mh3tGGDl2gJ0H93NyKGZR2ywO7t3GX//9w3zkw/dWw096OtvpK8T85JEf
      03t0DyaT4cWN73DbjaumvK9/+Ju/YeGy+bz84kuUZS1vb36F/TvfwZu1iKaswy9feIwnNx7k
      rjU3VI/Zs+sddDjEky/vQA8f5pFn3+DeO2877dxh/yG++kf/mQ99+lM89d3/lx35BtzRo7y8
      4U0yTkhfkGbf9jeYt2QJXQd38t/++3e476P3V2PmB7uOcGKgzM8f+wkL5s/h29/6Bjes/xVq
      z5CF8fHvfwfZuggTxfR27OWV19+ita2RZx5/jh0HDrP62msIRvv53t/+FeG821nSkksOjAps
      23GI9i0vUcw088IPv8NAdinXzG+c8pntfOFh9pVn07lrA9v3H8crn+SNHfs43NnPiiULOH5w
      J//tv3930r0MdB3hxGD5/dsDeDVzcaMBtuzu5o6bFiHdFJ5neP6pF+hp381LGzaTa2rB8TLc
      +8G7cSbeqXCZN6eWjbu6uH1plnTLQtasXsyuA8dPv5BTww0rWtn69g46d27g5V1dbHrhabZu
      2c9N932Yba8/jwZWrL6dJfNbJh06e94ijuzYxMpb76TzxABr1t5BvuvgWe9LCIGXSuGZkKee
      e42DR7q4ZeUsdu4+DtJl/b33kHMnh5QsWdDGq69u4Z4PrmfdvfdRn576Z/3Qh9bw6jPPk2lc
      gCMglU7Tv2cDnUGWDS++wL6DHbjAghU3ct3S1knHNrUtoqd9K/NX3cKCRcu55dqlU15nzV3r
      2PfWm3TnR3j44UcJ+w/w/OatjAQ5GkcPsn/QkKmfzd133Dz5QK+WlozP8XKG1cuXcN/6Ne9p
      jbeQkPLSPP3CsxzvaGfeteto37kdqvcyZ9L3m9sW0XNg6/tXAADLW+s4NKzJSnjz2ScpZppJ
      u5KPffROntl0lJVt9cRhkZ079nL4wF5OnjjCtl1HIC7zjb/+H6y56y7qG1sJ+w+z4e3D3Hzt
      wtMvokNqm9tocIqcLGdobazjgU9/mqwTsv2XG/Hq5iKAzsP76Ojo4ODRE/xyw0aUgdd//gOO
      lOtY1NbM8iWtvPTC88xdvHrK+9mzfROmYTYvP/EzMs2zcSsLecYMXqMidu7cScfRQ5w80cmm
      bbsAzbe/+Q2W33InWRGy5513ONZxhO6BkTNeIzP7Wo5ufZZl163GqIAnnn6JWS2NpBsWQNdW
      5t90DwAnOw5ytOMY+w528MZrrxECu195lM0nBCsXz6H35DEOHjlGV3ffGa8TaIdVq5axc8fb
      LF28mKU3f5B1K+fS1XGQPd0hc2sFpeE8e/Yfpn3vXtrf2ULHQJl4tItv/ePj3LX2JkrD/ezc
      e4D2ffvw4zN7cXpPHGXboTytbh+vbT9GQ20WACHGq3b1Xg518PprG1CVe3njhHj/GsHlUolU
      ysWPDNIoUimXoZEimUyG9q2v0BnN4tfuX4tWEfn+AbQQDJzooHHpDbQ1pBnI54mUpq6hCakC
      fCVorD/DomxjGB0ZItSS5sZ6iqPDxLi88NA/c8NvfJZljU2kXIfR4UFKfogrFO3H+rljzU0E
      xQLDhSLSS9PSUMPg4AiNzc048swenKGBfjK1jbjEjBR9MpkMGE065RJrScqVDAz0EytDMX8C
      mpazrK2e4cEB/DAmW1NL7Jeq95XLTB6bGB3jhxodB2QyGcIYVFhEGYFDxPd/8GP+5YP/irqU
      Q3F0mELJx0un2LNrP+vvvpPQLzI0XEC6HjUZj9FCiVxtPXU12dPuJQrKDI4UaGxsRpqIwZEi
      GWeAHz6ygy/89gPU1WZRoc/A4DBIh4MH9rH2rvW4RtGfH0AbqK+vZXRkFCMcZs1qOeNz80sF
      /Bga6nIMDQ4ivTTZlIN004SBTy6XG7+XlGTPnqPcvX4tQbnI0Ejh/SsAi+VC8L4eAlks54sV
      gGVGYwVgmdFYAVjeE/mOXfzBV7/Gf/3G31MIFEoplNa88fyP2H18uLIF0qXbC+5C8b5PjGW5
      NBT6O6ld/AHWze7mHx55ktKejWw93Et9sYtw/n4+sSbNC69s58Nf+lO+/Im1l7u47xnbA1jO
      CddzKY8O4TW3UecWuX7NtfzO1x9k99a3uPdjv0pj6v3VA1gBWN4TNc3zGDz0Gq91eHz1Nz7C
      SM9xll+/lo/96hd48Z+/xxd+/2u889YbpGtq3v1kVxB2HsAyo7E9gGVG878B9/ownYeAJE8A
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='NeCaRa' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='NeDe' width='192'>
      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
      /g/g9n4UcKLCiQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='NeDeRa' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAW1UlEQVR4nO3deWybB3rn8S9JHTxE3bdk3bIOW77kIz4UH0p8xMrVmc50UEy3s8W0xW4L
      TLdYtNjF7mCBBfafYrHTbrHTmSIz3czGnqRJPI7s+JSP2FIsH7IOS7Yu66bui5RIUeT77h92
      lNgSfUgU5fh9PoBgUXz58Hlf88f35SvykU5VVRUhNEq/0g0IsZJWPACqqqIoykq3ITRqxQMg
      xEqSAAhNkwAITZMACE2TAAhNkwAITZMACE2TAAhNkwAITZMACE2TAAhNkwAITQta7A1bGm7R
      3t1HbPoaigszsQ91cb7yNtGJGZRsKWTSPo013Ipep2PM1s7l6jpiU/PIilK4ebeb/KKN5KxK
      8Oe6CPHcFh2AjOwcBgf76bENUVyYycVzFWw68D3O/vZfsPffI9RoRLGms3/HOi5VnGVL2Z9w
      /P/9kiZlilV5RSiKDkVRUFV17kuIQFt0AHSGYBKSEmivH0RRFAz6rx/Qbe1trC7cRKwZLl+8
      jFvVo6oPrjMEm9ixcydHjh4j90d/CDx4S7ROp/PbSgnxrHSL/URY7fUrDI46SMxag63jLiVb
      11HxRTVxq/JIMc9wu72fvIIictIScYz0crHyJknZRayyuKmubyY9v5iinOS5Z3+9Xl6OiMBb
      dAD8RQIgVpI86oSmSQCEpkkAhKZJAISmSQCEpkkAhKZJAISmSQCEpkkAhKZJAISmSQCEpkkA
      hKZJAISmSQCEpkkAhKZJAISmSQCEpkkAhKZJAISmSQCEpi16LIp4OXgUDz/55M+WXOfH2/89
      61M2+aGjwJIACEanR5ZcY9brXvDninsUVfUsqbbOYEYfFLakGr4sOgCzLjsNd1rILlhLuDmE
      WeckdQ13MUbEsWZ15iPLqt5ZmhobSckuwBqicqehkeSsPGLCzUteAfFiszf/F7zT7UuqYUz6
      PuZVf+yfhh6z6NcAXZ1dJCVYOfqv5QDcr/2CnqlQUhLj6bx7m8+O/4522zgAVWeP4dBZOPrB
      UT7/5Ld4jeGo3qU9KwjhD4veAyTGRXH04xO8uv+dB5dzixltbuP9Dz4kaGaItOxcrlVdoSc6
      nI7eAQ6WZFN98TSddjsRSR2cqG/mh985gKIoKIoig7FWiEfxzxOR16vg8cyv5Y+5a4qycG1/
      WHQA3v/lPxG3diezLgdnzt5mTXYK9qlpQo0mspLTcAVb2bJuLTlpicSZZzn/+TGscWlkWmcY
      HnNgMoaj1+vR6XTo9XoJwEpR/FPGYNATFDT/4eSPma96/cK1/WHRVf/0P/50bqjtmtx0dDod
      SRn5cyv8zYG3+Vv2kbdZXfA6IVbSogOw0DP2Nx/Uj3/v6zohVpIcdwhNkwAITZMACE2TAAhN
      kwAITXuh3gs0PTnOjVMfL7lO8f53sURG+6Ej8bJ7oQLgdjlpufHFkuusLdkvARDPRA6BhKZJ
      AISmSQCEpkkAhKZJAISmSQCEpkkAhKZJAISmSQCEpkkAhKZJAISm+QyAqiqcO36Uf/z5ewxM
      OAPZkxAB4zMA0331fH57gJ2FMfzmX08FsichAsZnAExxWcQr/fzqk0vs2r45kD0JETALvh16
      dnqc02fPEZOcTkQiuJ32QPclREAsGABDqIUNRYXcT3CSFmtm2GmYt0xzXTXtvYPowpI4UFLM
      UMcdLtxsxmyN5dCeYu62dLE6P49gg46+llqu1rdjiUoiN1qlqWeCwnUbyVmVsOwrKMSTLBgA
      vSGYKyeP8MHlDgpSrKRve4fiotWPLJOzppjpyTO02F0AXLl6jV2Hf8CpD37Fb4faKVidxWfn
      R3jj1WIqqyopeffP+OT9f6LbPUF6/lpGxqfISlEeGY3o9dO8UK/Xu2yj9F42MhrRh9ff/TeE
      pt1jVWoK6RmZ866/cvJDXHHr+O6hNYyMjBJhMTLhmGIWPTPD/QwnZ5CbGkft7TpCjCbsDjsq
      esKskWzdUcLHH5ezrSjrkdGIBoN/PqBmMBiWbZTeS0dGIy7MHOSh/LPjWAxO8vf8kH/3B68/
      cr0xMh63w0bdXRNuxyglB8qorLrOvsPvEGd0c6OhjajYBIoK85kpWk3Vl9UcfPs7xBtnqa6u
      5uDhsmVZISGeh88AGEKMbN9zkLG7FegWeJrYWlL6jUtZAOze9/XPXktIm/s+1BLJntKvA1T6
      WtJSehbCb3wGQCGIwX4bf/1f/yfBcjghXlI+H9let5Pqsx/z46ZaDn/nh3zv4C6+7TNt//zv
      ynG6l/Zi6t++sYHdGzL805BYcT4DYEnI5dip8wCMtl2jYwIyIwPW17IYn3LhnFlaANyzXj91
      I14Ez/RmOI/LgUvOKoqX0DMd3OuDQwmW940+0WxPDzPtS/tjcPqQUMyvbPNTR+JZ+AyAZ2qY
      n/3Dz3HMeNm8p4zDq30tKQCctXWMv/+bJdUwREdJAAJswQCoipf+7lbGlDC+/3ulRMenBLov
      IQJiwQMbj8vOJ5+dIcg9wbFjn3KrsS3QfQkREAsGINgcyes7NxIUmczebWvp6e0PdF9CBITP
      l7bdPT0M27pp7nNwsHRXIHsSImB8BqC07HtE6BzcqLrM1ZsNgexJiIDxeRbIOdJFUFIh6+K7
      GB0dD2RPQgSM798Ep67l+wdM2LpaiM3dGsiehAgYn4dAM2Pd/Oxnf0+XrY+Ky1WB7EmIgPEZ
      AEOQEYM6y+lTZ0lMSfO1mBDfaj4+FD/BL/7518QmpRAWk0BYaKDbEiIwFtwDGEItvLFnC9Oh
      Cfzgje20dvQFui8hAmLBAOgNQWSs30WWcZIPT1ezpShb3g0qXko+zwLpDCb+9Cd/A8DgnfPc
      Hy+gIDZgfQkREPImZ6FpPgPgmhjgypc3GR6bxBybQawpkG0JERg+AxBssmLvbeRvf/Ln/Orc
      PeIsgWxLiMDwvQcY6eK9I8fIXl9C2b75H9KYHO7lV+9/yFevjUe77nDkw99RfbsRxethbGwc
      5eFUsLG+No797hhXbjTS19ZA+clTtHYPLMsKCfE8fAYgyBJF6as76G2+yaVr9QssYMbgdcxN
      DBru78OlgiEomHPln1Bz4ypnK+sAuHThHFv3llFffYmTJ08RHAReL3NjEYVYKT7PAumDTGTl
      5LBtzwFiFvhEWHhk1Fx6vF4v2Zv2krMZ/vEf/g86ZYqcwk3EWXRcvngZt6rH61VQVTCEmNmx
      axdHjh5j9Y/+EACPx/OtmQ3q9TGn0h9BVlUCPtNUZoP6MDvZzbEzlezdOsCFqUj+w4+/98j1
      7U21qHoDdXdaGLN1UpS7irp7nWwuKSU9XKGmzUZETALFG9YxNZrDxauneGXfIVItbi5fuMCO
      3aVzcyODgoK+NbNBDT7mVOr1Sz+hptMR+JmmMht0YcbIVFKtKqcqqvnjv/zP867PKlhPVsH6
      BxfW5AKQmJ43d31yztq57y3RyRwue2vu8uE0+YS9eDH4DMCVi+dJSF9NbKoXdXY6kD0JETA+
      99sF64oJD/Fy81YNTre8UBUvJ597gPf+10+5NWBk/57tRFuNgexJiIDxGYA/+suf8vbUDACR
      sXEBa0iIQPIZgKRVmSQBTsc40575fyNMBI7LM4vNPrnkOqsiogjyw9mql8lTzy31NNfQOG7h
      7X3yueCV0m+38/NrlUuu85/2vE6EUQ5nv8lnANz2AX72v/+ZGa+CMSyGoS0biLOGBLI3IZad
      z/3h7OQAE4YY3i3dTGfjNY5V3AhkX0IEhM89QGj0KiyODt77pIOy3/sD4jIzAteVEAHiezy6
      y0loWDhhOjc6axKb8pID2ZcQAeEzAKrqxWF34JxVMAQFB7InIQLGZwCCw2L5i7/6a7pam5iS
      s6DiBTTSOcjdszVLquEzAB++9/c09EzR3trEf/u7XyzpToRYDu7pGYbvL+2DVT7PAkXHxOKd
      ncHlmmFkfGJJdyLEi8rnHuDg7/8JB76rMmTrYsItx0Di5fTE3wTrdDrik9OJD1Q3QgSYvDFE
      aJoEQGiaBEBomgRAaJoEQGiaBEBo2qIDoKoqtr6+ubEyquKhse42o3bX/GW9szTU1jAx5Ubx
      zFBbc5PhCZk0IVbeogPQ297IL3/9wdxs0BsV5YzrzHx05AjtTTUcP/472mxjAFSe+RRncDhH
      jhzh5MdHUU2R4KeJZEIsxaIDkJq9hqzk6LnLHX3DZKWlEeKe4viZsxj0Cte/rOTyxcu09Q2S
      np6Fx+Wgq8/G1EgXJ85eQVGUuTGGHo/H76MRH//yS+2HY/oe//LnaMTHv7xerx86B693fm2/
      bRfvwtvFn6MR521zP2yXRc+ba2+q5e69e9TcaWGs5z7F6/I4e+oERKVQZHUzZQijeF0RuWmJ
      xFs8nD3xCdb4NLKsbgaGxjGZo9Dr9eh0OvR6vYxGxPdoRIPBP29FMRiC5tf/Fo9G1Pthuyz6
      UZJVsJ7//j8eHY2YtWHhZfO37CN/y2LvSYjlI2eBhKZJAISmSQCEpkkAhKZJAISmSQCEpkkA
      hKZJAISmSQCEpkkAhKZJAISmSQCEpkkAhKZJAISmSQCEpkkAhKZJAISmSQCEpkkAhKZJAISm
      SQCEpkkAhKZJAISmLXou0Jeff4pNb6Ugt4D8rBQG7zdw4VYL5rBY3tizicaWTvILCgg26Oht
      uU1lXTvmqEQyIvV0drQwoKTyo+/u9ee6CPHcFr0HcOt0BHmmmXLNAnC1spqS0oMMtdVz9KOP
      mHWOcPzsVaanp6msqqJk/zt03q1lzaZXmHVMUbJ729xoRFVVH4zQ88MYPXhQ5qua3/zyS22W
      rzY++vZbfZav9rJuF199+6H+ovcARVtfxRLs5he/vUB6vJVIi5FxxxSz6JkZGWB0Opu8tDju
      NDRiNJmxOyZR0eO299PlCuftODPwYHTeVzMkvX6YrwmgKF6/zdN8nPowtPPv0w+zQWHZasOD
      +Z2P1/dXbcXHdvFHBlRVXbbtsugAOCeGuNXew3feLaOjo5mSg29ytaqa0rJ3iTO6uV7fSlRs
      AmsL83CvyaHy2g0OvfNd7JNjvPV22SO1DAbDw9mg/pqBuXyzQX3OqfxWzAZdYLv4azaoj+3i
      h9Gg6HQv4GzQ5Mw8kjPzAEiKKQZg997SuetfK101932IJZI9+157eCmGmMXeqRB+JmeBhKZJ
      AISmSQCEpkkAhKZJAISmSQCEpkkAhKZJAISmSQCEpkkAhKZJAISmSQCEpkkAhKZJAISmSQCE
      pkkAhKZJAISmSQCEpkkAhKY992eCVVXh2uXz2MZc7D9chiVYR3PtNRrv29i0s5SUKCMeBUKC
      gxkc6CEiJomZ0R4uXbtNfHoBCSEO6ps7KSjeTW5q9HKskxDP7Ln3ALPTo9R3jLE928yZay0A
      nLt6i7J9mzl16hxHfvN/Ofovv6bDNsjZU+XUN7Vz/txpine/QU3lOc5fqmb/odepOFXu95UR
      4nk9dwC+mnLxYDjRN3+m4vVO09bWRVxiHDr0GAwPx1k8vJGqPLzBwwFQQqy05z4ECjJHsz4r
      hmv3XbxemsC5y1W8XrKZ8gu3eLPsLTrrruJSg4mMiqJ0fxkR0YnkxB3i4qWTbC45QEKIgzOn
      zvHa4beWY32EeC7PHQCdTs/Wkm/M/3l1OwA5RQ8up+47+PXCpmQAQuNW8eZbX88JSs/fsJhe
      hfA7nbqCxyKKoqAoCnq9Hr1ej9s5TUfDjSfeRlVVdE8ZN5a+pphQs2XuPr6a2nahpgOv1/co
      tGepXZARS0ps+Lza7u5u3K1tS+pdFxqKZcf2ebXtMzPcHRpYUm2A9UnJhBiCHqmvqAqX2yqW
      XHtt4jpiw+Ln5nbObZexKlSPfUm1DeZMgiy5j/QNMD3uYKit/0mNP/j3Sdt8JQMAzNtg/ub1
      ev02WvBlqb2c9VVVRVGUb812WfEACLGSXshfhLXeqaG8vJy2nhG/1XTaRzh/5hRN7b1+qwkK
      XV2di7rlzfr6py7T0VxL/7iLyYFBHG7P3M/to/3YXV7ab9bj8HFbVVWoa3j6fVytOMHZii+Y
      mvHMv9I1Ts/o9FNrANQ11D3xetU7y82qy1TdbPA5j7e/78mHeQtpbbzFsU8/5fSFShaYH01D
      3ZO3wfKMUF6iOy3dHHznLYI9M3x09NdkFu1kZqCZvgmFbbnhXG11YTYZKUwy0tQ1xLrCPG7V
      NRKbnEnJ1nXMP+JTqKj4gr2HyvC4nLQ23OBOaze5G3Zwr+pTUgr30NdcidMJ1rgUjOExJBpn
      uNvcwY59pZyvuIDBG0pBQSqZhRu5f7eBjRs3Agq3b90gLS2dhqvXyd65hfrrX6J4wBSiIyom
      mpraJuJSs5mwNeFyTKOExWMIMaNM2Rjsuk9sWgHOgWZGxpzsOPQ2CWHBc11fv9tMWNsQuVYL
      uly4WHUFLLEYhuvpNeSSZ5iiZrgHqymaJJObtq4Birbt4sblcgqLSxkYGqSl4QYN9+6zfudB
      shKt87bMkGOKAzvXcunaDdzDvXiDw9iaY+LS3SkyjBOcbvXyg5ICQpJzsHXeIyMylOrG+4RZ
      U0iLUai/18krpYcYGHzyg3es6x79bisl+Sm03L5GY/cQJmssa1LDqKm7S/bGXUwN9WBrvU2P
      Q8EclUjp9o1PfazkFG7C1jfCK7t3UFN9gw3FG6itvYattYOozLXMjI9wq+oyMclJ1NQ0EZeS
      Bt5ZilfH0T4R/mLuAdz2YU6Wl9PZP4YhLJ7iwnSmpz20tN1jbGKM4pL9mPVeOgdGebOsjP6G
      OtwGA/29vl4QeQgOsjLW08JHJ05zs7oGg0FHX3c/GCPYsj4fa3QC6/MSKC45wOhIN85pF15H
      H7fbB1i1ej15URHEr4qm5vqXONWweffgGJ9EASbsdhKsOpr6p+iqvYkLPQO2foLMEby6KYuM
      9a8yOz1OSHgsh954k4HuRmZDrLx9eDN1tx7bm+iCKUiPoKlriMnuBu4Nuekd6Gd14Vr27tuN
      xRjO3v2H0HkmuFldQ1CwSnd7L+aYVazNTQNgetqJ1z3BvcauBbdMd+sdKqoaSDfZiV23j4LE
      cLr6bGRv2MWOLevZWrKHyFAFp9vD+OQk99psvPXWQfROF1PTTjyOPpo7nv7MHZWeT7rVxckz
      FYw5PGzf8xp6tx3HlBPV66LmXisTE5N4vHp2v34Q1/ToU2s+bnJiEhWVickxPEFh7Ni8lp57
      1fRMW+ipvcWMTs9A/zA4x6is6SAzPerFDEBkQhpvlJWRnhBJQnwcOs8UtsEpIiIiCQk1E2zQ
      YTIZSYyy8tmJE8Rk56K6vWRkpfuoGEJcjIFbTe3EREWTX5iLogshIyOJhIQEdIDJZCI41IRB
      BxZjKH22IczWSIwhwRhDgwkxmbDG59Db3MD69bkP6+qYGOrl5MkLhITDuc9PM+VW6Zvwkh2h
      Iyp7NXqPQnpmBiajCX2wkdAgPRazGTNuyj/7lPjUAhT7CMc++5K8NQl0dtvo7uzAC1hMFtLy
      NzI+0EFEah6pYZCdnkl4ZAzXvrgEIaEYdGAymskrzAVDGBmZ8STExwI6TEYj/f09GM1WTKF6
      Ojq7GOztYtr99UFI3rqtHC47TP6GbfTePENd9zDJcbHERFjBEstgXSVOfQg1Vy/SMzBGcpyZ
      4+WnGbI7sfX3YQoLxxgShMloeuL/6dTEMF19I4QEG1A9Ti6c+Rwl1MqgzUaI0YzFaMRkMhJq
      NKHXPfj/eFahD5c16VycOXOeWZ2Z+PgEdDrI2fAq8YZhrOnZ6D1e0jMz2LQ2m54xDya9Tl4E
      P4+JwW5q2ofZ88rTd80vq8HuVq7XNZGSXcSG/IxF1Wi7U09UZh7R5hD/NveM6qovEJ5eTEZC
      uARAaNsLeQgkRKBIAISm/X8jFF6boog4vwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Presentation' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Question' width='192'>
      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
      ZFFP/wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='RQ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydd1hVx/a/X5pUlWIDBVTsJRq7xt6NsfcWu8YaY9fYW9Ro7D0ae+9YsaCg
      IiiidKQ3EUF6b+v3x1GQqLnxXr2539/Z7/Pw4LS11szsz95ny5kZDRERFBTUFM1/OgAFhX8S
      RQAKao0iAAW1RhGAglqjCEBBrVEEoKDWKAJQUGsUASioNYoAFNQaRQAKao0iAAW1RhGAglqj
      CEBBrVEEoKDWKAJQUGsUASioNYoAFNQaRQAKao0iAAW1RhGAglqjCOD/RzxcIeTFPx3F/wkU
      AXwuHGyhdWvVT48+cOHWPxfLgomw/9LHy8Ofw4RR0LYdzFwICamfwWkmdG0Nzs9VySdXQUMD
      /F5/BttfDkUAn4vYKHjkD0uWQLu60Otb8H6pKktLAgdHiEkoqB/zAu7ehZDIgry4aHB0hJSM
      gryX4XD3DoRFqdKZyXDnDmTnwSNXVZ7kwdNH4OYJ7+5yE/IcnnkXjjMjHlq3gCQ9mD8bntpB
      9+9BAH9v8PZX1fN+Cv4hqn/n5cAjJ/APLbCTngL3HFT2RVT+79xV/bh6QM3mYG8PFc1U9RNi
      wMEB4pIK9yMzGx4+KBgbyQW3R+DkDOlZf3f0/31E4fNwZpdIMRvVv7PjRfQRufBAJNRTpGxJ
      kSZNRUzMRB49F3GzFylWTKRFSxFLcxG3CJH7l0VMTUQa1xexqCQSlSRy31bEwkqkeTORIroi
      l51Ewl1FQGTOTBHMRbLTRLo0FbGuLFKvtoi9r0j3RiKVaoh800xER1Pk/L2COC/uFdEvI5Ka
      rUoHPlTZc48SmTJIZNAUVf6gViJTFotkp4q0/lqkRh2RkiYi20+IpMWKVCwjUq+xSO1qIhuO
      iPw4XEQLkdr1RX6YXxBnrIg8vCZiUlykaVMRYzORO24F5c1bi1SvJGJZVyRXRMb0EClfWaRp
      I5HO33/xaVOeAJ+TzDjVE6BXbyhdC1rWg12boElvcHoAI7+FnXvB5xkYlIJxE+GhG9QoDb+u
      hEnL4OFj+KoYHDkP9drDk/uwchW0rAXX7Qp8haZCYgBcOw7OL8HTE1zdoVUVVfmQqXDvPjSt
      DoHBBe2iwsDCCgy0VekKlVS/Iz7yzmB/HnzT4ekT2LsO1m+A+HAIioMhI+D4RZjQBzbuAENg
      zW7YsbKwjdXLYPgcePAAJvaClesKys7fhrO7IDwIMgFXV/imPfyyAc7s+vfn4m+iCOBzE+IF
      V5zg1Dkw1oXYWHhwVfVu4BoGpc2g71iYOQL2bQUbG3DxhehYOLZdVS+9KBjpge1+aNYB7G7B
      6xTVR523bN4CxQwgJhrKVQSjIqp8DY03Fd781vjTFJtbwYtQSM1RpYP8VXWty324PzExkPgC
      OrSF9QehakWwqAtn9sC9y9C0Lmw8/NdjEvMaylur/l2hPMS+eqdQo3CMB06DQRqM6Addhv61
      3c+A9hf3oE7omsIfxyGvBwwaAM4O0LQJXPaCH2eCHpCtA1fPQ7GysGAJTBsFPgHQvCncDIa5
      P0N6ApS0geOnoUYDaFoPLh8r7EtTS/W7TWeYvBy27QdrY6jW6K9j7NgbLBfA2KkwqgesXgRt
      +kONUqBTBEL84YoteIdBS6BhE9U7wICRUKUsBEXC80fgEwOTfgIDAXcPoAiYGoKdLZQqAqXf
      8dmuDezdDtVMYdchaDvy4/EdOwo9BsJXNrDg0KfOwCejPAE+FyXMoXlj0NCCPcfgm4qwfht8
      /xP8NAS2b4DdB0BbDypUhIe3YcVK6PA9DOkKSzZAx7qwdhWcugz6BjB1Dmi8hsuO0KEzVCoP
      ukbQqhXovPFbvi5cPQU3T8Pug5AH1KoH5c1V5XUbgOU7V6OuMdx2AONMWLUWHrtD166qstET
      wDgPrt2Dlq1V/io3hlO/w5Xj8OtvqidHybIQHwKrVgKlYPlcQAt2/gE+9+D01cJx/rwOejWF
      tb9Ch6GwYkbhcgNjaNVcdTValIbtG+HaYzi294tPm4aIsjmuWnPjFPzyO/y2DepW+qej+a+j
      CEBBrVE+AimoNYoAFNQaRQAKao0iAAW1RhGAglqjCEBBrVEEoKDWKAJQUGsUASioNYoAFNQa
      RQAKao0iAAW1RhGAglqjCEBBrVEEoKDWKAJQUGsUASioNYoAFNQaRQAKao0iAAW1RhGAglqj
      CEBBrVEEoKDWKAJQUGsUASioNYoAFNQaRQAKao0iAAW1RhGAglqjCEBBrflkAfi5u7B180YO
      HD1FUnr2l4jpsxAX7o/DY2/8nznhHRz9XvmrcH+i4tMLMvKy8fD0+aCtpNdRhETGfLDswoXz
      f+n/75Ca8Iqg8Ciig71xeub/t9oUkM6F83b/utqf8HD3+Jd18rIzuHL+JBs2bOTWA7dP9vHv
      8rEx/RTS48Kxc3hMuP8zHnsHf7TeJwnA/txedp12oFvvAVQprcPYiTPJ/Y9D/TLERfjj6OqD
      aelylDQ2fK/83MFdhLx+5zjSxFDW7z/7QVv3rhzD1S/qg2UXPyaAN/7/Ds63znHfI4ToYB+c
      3D9VABn/lgA2blz/1xUkh1mTxpGhV5pBA/vx5Mof/H72zif7+XeoWrXaf2wjIy4CO0dXipmW
      xqKk8UfrffSMsMeO13n+Ggb37JSft/vgefacuoiRtgbW5XpiWbkeGpLL2sVzeZ2pSXhYOPNX
      b+H+4V/wTTYkLzmSktXbsGDyEACCHl3jkHM8C8e0p37DLtg/ecy5TQuo2W0CV/atJTmvCOkZ
      sHzNKswMVGcAndm1kkvPYiiuk4OxdV2WTPiW9l1GULd+HUZP+IFt69agb1QU7eKWrFg4jb2/
      LsLzRQpZcVFYNuuL841TpJdtj0W2H3vP3kEzJ42Bw0dz1fExzzIP0HTZNACuXbuG72NHXDwD
      cb6wl8DXmSQlJjN78VKuXbvFK50XtKg9hWWLfsHAyJDoRA327Fr33rjt/pP/2DBfFqxYj1HR
      ohS3rMHCaaPZuGI+USl5RIaGMX3Zb1y/dpXA9GeUH9aOWxePEuNxm8hEDfbuWs3audNJyNPl
      dUIGm7ZuomgR1eF3D66d4PczdzAz1SUVbV6432bHzUiWTx/GrpUz+WrAz+T5X+fgpQcUkSw6
      9B9L99b1AXC7dw1vH19sb7mQGuiAo1ckWSmJjJj6M9/UsQEg0t2R1JJ16d25FQDTF6ziZWIm
      sWG+zF+6lqLFi6FrZsOKn8fQp30XbOrWZ/DwMfyx9Td0jYqSqVWUtauWMGf8YIqWKk9EeAj9
      x8+jkZUWi37ZipGhLokapqwY15HVx135bdEkzuxZjU6NnlzYu5p188fTd8qv1K1ThyqmOVTu
      PIG2X1kwYvQo9m5dx/Tpc9E1LEZGETM2rZr39khATuz+lTueL9DNikPbshnezjdwTy+LWYIH
      93wiSYqNZurCtejFebF+z6mPPwGWzp3K7MlTefHOp4QcbW2MtDXy0+WsrCArGZuvW9K7Rzcq
      mxvi5qU6Kfy7QWPZtG0XAY9v5NevWK8FkV4u+D1+QNWalXBxD+FpSALakQ8ISTOkTatWVDDJ
      4cQlh0KxdB80jo2btpLpf5ew5FyKWVRj3fpfcbm4jxKV69OqdRuS/B247/KY+yG5bN7wGxNH
      9ClkY8/h82zdvpXtm9aQLUXo0qIBw74fnl/euXNnqjVoQWX913inlmDjb+tZO2ckm/ccp3Pn
      dvT7/nsy4hPo0X8IXbt0JjnUndiMQi7ISQh5z//BXRupXL8Nrdu0xd/hHH7R8VhWb0Kfnt2p
      bm3GI3cfOnXuQo/BwyiuA03b9eCXteuoqBtNRGIWXr5hNGvVjhk//oAWBYf57D1qy/adO1i1
      cBY6H7yN5bJh6z6+7dKRTl068fu2zfklXzfvTI3q1fiuqSXnnSPZtmkD2zcuZcfm7fl14uLi
      MC9jkZ/W0jOibGkzjvy+hZFz1rL+t42USPXGJSAOrWIWrFu3nhCnC7ToP5l163+jRUUdLjt6
      kJQm/LxiFZuXT8fu9l3iE5LoP2Q4XTp3ItTdlaJVGpER9oSMPOG2SwAdmxbc/St81Zj1qxfn
      n+j6lqzkWMJi02nXtSc/DOtTMCo5CdjeD2HH5g3MmjiiUBt3dw9q1mnATzNnY2Giz8bfNtGm
      y7d/IYA1W1i3bQsW+gV5JfV1CE/IzE9vW/8LL16+5OTJM7yMT6VsWfP8MgNDQ0Ar/zBD1Sga
      YmmUy7nbrsz4aSL2F/7AwKI26ampmJYoiZmZGc279Kdr868KxWJiYgKAkUERMrLyKGZcHIDU
      1DRKlrbAzMyMoRNmUcVMGx191ccdE+PCj71sDU10tTTQNjShsmWZj3Wb9NRUjIoWVfkzMiIt
      veAOEOLzhPNXbpOjqUdps+LvtZXszPf8p6alUtpCFeOEWQsonv2ak6dO8SImmbLlzN+zoRo3
      0CmiSU6mJrMWziPzdQTLF83FI+hlfr1cTS2KaIGOgXH+Cal5eapjVHNyc4A8cjW0KWlmhlmJ
      Mvw8b+Z7vvIy09DWV/VVR9+IvMwCRZevXAV/74L3hNRXAWzae4rUtFSK5o+PIelpmRQvpupr
      Wuq7ZUZkpKeBviEGWhoU0dUlOycbnyf3uXL7Ppp6xTArbgho0qV5DU4cPYJxlabovXNFGhcr
      mEN507fcnBw0DUszb9YkIvzcmDtnFi+Tst9OAFo6qgvW2KTw/A/9YSrlimuyb8saTl57QGoW
      WJQu8XEB1GvekYE9OhbKmzljCnN/nMiJ02dYu2Q2kbklMZRMsvKE7NR4nB+5k5aW/hGLKtq1
      +JqrTyJp0KgxT6+dpHXHjtRv0YEX3s6EhkdyeO8OIuML29i1cQ1HD/5OcHYZKpnp5Od36dGb
      +zdtiYwIY/u27VCyKiXSA9h76Chrt+wuZKPD1xVZvn4n29Yu47zjM/T0dLl3z7Gggo4escE+
      ZJnYkOx7l4NHTzB/+Qb69eqGrp4ezvfvEZeYiI6ePpGBHviFhpOWXvgNSKdkpff89+jdn5u2
      54gIC2bb9j1IXi7pOUJORiIPnd1ITUtHT1cPV6d7pOUUHisNjRw2/7YB9ItTwsQYHe2CW2GX
      xlVZsnYb61atICYTSlhVwuvBVY4fO8xtp6eADp2b1eLGAzd83O5z0vZ2IdsZibF4vdKkvGYk
      O/44zPKfF9GmV+/88qLlatPaRoPZi9dw9vQJpsxYRL0G9enZZwC/LZ3LiaMHueubRKMaBSJu
      3603R7b9wsmTxzhy5TFtv/n6vflPSkxCT1+fQI/HhIZHk54LHXv0ZdvaNfTq0/MDVwxUrVGN
      Ewd38/uOjUTGZZOTGsuGjTspXsoc46JGaGtpvp0AqpZIZ9veQ6xYu6WQjTMHdxMYk45l2TLo
      6OjQv0drzl2+A596tHx6SoK4PHSS58ER+XlRYYHyyM1dUpPiJDAsSiJDAiQhLUtERHx8fAq1
      z0pLEK/nwSIi4uvhLhk5qvzMtCRxcXooka/iCtU/vXOFnL7uIi6P3SQrN08kJ0N8/ILyyxNi
      o+ThQ2dJSEkXEZHcnExxfeQskRHhEhL5SmKjwuRVXLKI5Im/j7t4vmmblZYkTo/cJO8dX4G+
      HhIR/VpyszLE1cVZwl/GiohIXnaGPHroLOnZueL97In4BYVLVFiQxCWlv9e/P/sXEYmNCpeH
      zi6Skq4ak+iIYHFxfSppKQniHxwheblZ8tjZSaKjoyUsSuUzJMBH0rI+Pi4iefLc+5kEhkWI
      3/MAERF5HR0hj596SnRkyJvxV/XZzd1HcvMKt34RFvjGd464P3kkASGR8iEiQwPEyclZ4pLS
      8vNio8LF2cVVMrJyRSRHfHz88suS4l7Jw4cukpSWKSIF85+TkSx+QWGSl5sjz564SFD4SwkL
      8pOkdNUF4OXllT8XPj4+kpWWUCimQF8P8Q+JlICAgHf8OBWKS0RU9l0fSURkhASEREpCbJRE
      vopT9dPtkfgEhOTXDQ/yk//5UyLv2h5Gt2IbmtQs+0+HovD/If/zAlBQ+JIofwlWUGsUASio
      NYoAFNQaRQAKao0iAAW1RhGAglqjCEBBrVEEoKDWKAJQUGsUASioNYoAFNQaRQAKao0iAAW1
      5pMEMHPEdwTEv02lM3jgiM8e0OfA1f4sV+95/mWdq0e38SgwniuHfuPMbfd3SjJZu3rDF4lr
      xKjRH7ef9orlv+36ov4/xJldK7niFPBOTjyjRry7eiydSZPfX032MY7v+pUfpkxj5PBh3H3y
      /LPF+aX46KL4TyEi0Itzl29gXb0+3do34vz5W/Tq9S33blygVLXm2JjmYecSRJc2jQHIzUrl
      3OnTRMSm0KV7b6qWN+e5uzNXbzvRsFUnmn1dvVD6a2sjHD2j6diyAc+cblOsYkP8XR1IT4uj
      RMWGlDPM4uL1WxiXrsCAvl05dfQYsXq1ad28Jk9vX8HZI4gO3/Wipk05VcDpcRw6aYtlpB6t
      ykB4gAebPez5pkM36tewpGq1KkhuFhdPnyA0NpXuvftT3tz0TW+zuX7FjtjoSDSKWzKgVxdc
      7C8Tk5KDTnFzmla34MTpsxQtXYn+vb9FS7K5eOo4r7P1yMoVQJOq1aoA4O58h9tO7rTq1I3k
      5/bcsLtK924d88ufPbTH/qE7Tdp0pkmdqtyws0M7JwnvsEQGDB5MiWKq5X9u929iUqkxZYok
      ceaOJ0N6deLOtUs0aN8VT8erPHQPoE3n7tSpWp4LF87To0dPkqODeRSUlD+HGSlxHD92AmOr
      99ddSHY6R/fvQbO4Jf16dkZTcrhy9gRBr1Lp1a8/5fJ3XcgiMEbYsWUjmdHejFt1jFb1Fn+O
      S+yL8dEnwIwR3WjQshvJf9r6Z/mcyUyePJnJk6cTkwGZ8WHMXLyBb7v34aXbVf644MLtK2dI
      zYUT+3dw3s6Rx3ev8So1L9/GoS2ryStZnR6dW7B0yTISwj1ZuukIvXr35vi2NXh6PimUDggJ
      ws7RFQB3J3uCo5OxO7mTHNOaVLXQY9Ev2+jZZyDJAfe56OBF/QZ1aNG+HR52x7n0KIK+vbqx
      bdXPRL3tjG5xGtaqRNv27QF4HhJJr57fsWLRIvLI4eL5yzhfP4F7rBbd2zfl1Olz74xADutX
      raRyg9bIi8fsOnkTJ/vLhCbp0KCGJbNnzeebDt0plRfO2t2nufDHBoIyitOsVll8gqPgjf1w
      Twc2HblJ797d2bZmKZW/qk+5SrWoamXGxfOX8X9sx87TjvTp04vTO1fx2D+aC/s2k6BvTT0r
      XdZsP1QwiZlxXLx5H1dHOzbt+INscjh50Q7f28c57RhAn17d2LlqPv7RKVy4qNrGJTk6GHun
      giffmkXzsKj1DcYZcbz+07UQ4PmUqg1bkxv5iD2nb3N8+yoipBTdOnzDz7PnU3CJFOHnBbPR
      kDz27ztAx04d/tX194/z0SeAhqYGmh+Qx8I1W6lkAqqPQBMI8XpGzW86YlPekjKD+vPTdjs6
      NLDh3j1HTGp2JNLrEbcC0hjx86B8G41bd2T/idN46BYhITUdX4+nNO/UHSsrKzb/vp+HVw4X
      SscHOH0gQlNatapHCTL5pk4Fdu7YQfhzPzp8nY6ZgQGaRYvy4O59omJ12bErDA2dIoRHxmJe
      zRw0tTDQ16NY0WLEA+3ad8bS2gZzI13eLvmvUb85B84uZeGjW/QYMLyQ55qNWtOodhXqlenH
      uF/PUUsXmrdqRbHcEJ6FRHNs/x6QHDSNwTXUi3FrZ2NpCE1r2+Tb8HjqSqfufbGyKs/v+/dD
      fABF9PTR01WteXZzcaZrr4FYWlrRq2tbHj5xJ0+vNJ3bNEQ/3oRdt0/k26rdrC27528is1gu
      g9tWwv7mbUpXa4SLswu9Bi7A0sqMrm3r8cTd76MXQnB8BoubfgVU5tSNwh8fazZpRf2alald
      ojcT1l9EP/QxujaZhD2FIhrpxKaC+TtbLzmc30diySb88G2zj/r7X+GjT4B1+y7icuciRXU+
      VkNFaUtLArw9yRPw9PDA0tKatu3as2XNar5u3gl94onM0sPCqEBrG9f+xo+LVzFz8kjIycXc
      vAy+Pr4AnN2/lSSMCqWD43OJj48DhODQkDdWtNDSgnB3R57F6bNyxVJa1KtKXq5qoboAFays
      ady2GytXrqRPt85YW5gVil34+GK4517P6D12Dnt3bODg7i3kvVMW5u9LWnYeXp4eVKxQURWN
      lia6JuaUK12aBUuWM2vKeJo1qou1VWk8vQLJyUgiKLxgVwfzMhb4+Ko2ztq/9VeiknN4N5xy
      VpZ4vtmVwcvDA2tLy4/GqqlXgmIkEJmhSdfWTVmzei3tO3bEyrIc3h6egODh4YulZTlyMzLI
      zBWCg0ML2SiuLYTHpRIXHkDsn/Y1eNtfT3cPKlSwwbqCBd0GjmflimV07tQFM/3C9Q3MrBjc
      u/NH4/1fQmvJkiVL/m7lQF8PajVpTzFdgDy8vQPo1KMvRTMj2LbnIKEJMH3SKExKWeDmaM/A
      UaMwyHyFWaXG1K5inW+npIkuO3bsxS80ljIljPluwDBSAh+y7+hpxNiGIQP7kvxOule3zrx4
      dpuTF+0wK2NBtTqNSXsVRt3mzTEzK8UT+wtcu+WISamyGJhaUK96eY4dOsmIaTNwuXyEsxcu
      kaZbhnbN6uRvoKRNFkfP2dGghhW6ptaUNzflua8fjZo3JcA3iO49u3Hs921cv32Xzn2+p1bl
      t/HncObocXx9PfGKSOenSaOJCQ/AumYjTIsVpXIZfTZt3YnjQzc6fPsdLVs25+Tvm7lq/wCT
      MpZ0btccP98g+g4bTuDDaxw9fQ5jmwa0blKXRzcuolemAmkJCQwcOQZfR1uOnDqPgVVDhvZo
      TYCfH42af4N2Tjq+EfE0b1iwfYxuTiJaJarSvnVj7jsHMH5kL6rWrIuj7RFOnb+EVcMu9Ghd
      j5KGwubte8nVMcDMvDzlTHUoWqYy3ds1ZMO69TzyCcOqXFlaNG34xnIeQX4+3Ll9A+8XmcyY
      MoaGjRpwZPcWLl29Rpkq9ahTtXyh6+TezYvolamOuanBp16P/3WUNcGfTDqjR8xg7/7t/7qq
      wv88igA+mVx8fQOp9uZ/ahT+b6MIQEGtUf4SrKDWKAJQUGsUASioNYoAFNQaRQAKao0iAAW1
      RhGAglqjCEBBrVEEoKDWKAJQUGsUASioNYoAFNSavy2AzJR4/EMiVIm8LFycn+SfEh/83Iv4
      +DiC31nwAeDr6/sBS9n4+gb+m+F+XlJTU/8Rvy9CA0lMz/7LOsHPfcnM/csq/yhfbuxU10d2
      eiKBoS/+lu+/iiU1NeWD+aGBvqRnf4IAtEln8bL1AER6PWDsuDF4hCcDsHzZKuLDnrLv1I1C
      bXz9PrQEL4W1q3f8XbdfjsRQflq66R9xbXt4B96RH56Yt+zbuJrXWf+lgP4NZkz/6QtZVl0f
      OelJHxRA6OMbbDp8rVDeTzOmf9BSRrQP89bs/mDZ4R2riUz5izXB8a8ieZ2uQSVr1WnhWkYW
      FJN40vPA/vYdpk+fwt2796jVvQbaJaqgpwHPnz5g/jwPdIqXZ+Gcifj6+kEPuHXhCFccnmBs
      Xom5MwaSGB3M0kULSEqHeYsXUeLNSc9eD+2wdXAnJiqSao3bM3ZgVx7eusA5OycysrKYPHMB
      wffPcf95NGWsq9K6RkkOnLxMWkYmw8ZPwyDpObZ3PYiNDqdWo5ZEBzzjZWIuS5YvJeOlHxu2
      7yMXbYaNm8KLR7a4uzjg4jmQjLDHXLjlgpGpObNmTuPK4c08j87CumodtF/74BYYhVm5Gsya
      MiL/jhEZ4M6W3QfJQYeJP81GKyGInQdOkpqWQZ9h46lpmsGOU7dIi39FEdMKLJo9ES2NgvE9
      d2gnJ5Ne0uq7wfRs15grJ/dyy8UXU/OKzJz2Q369jWuXk5ScTlKmBtPnzsfCVLX4NtLrIfZB
      mQzt1oqTezdQv8dEwpzOcsXRjSKGZsybNwujIqpo7U7uxeNFGuHB/rRs255nj5zINbBg6fwp
      eDnd5MDpq2gVMeTHmbMJeHCeW26hlChrQ5+W1dm8+xB5mjqMmjiN6talAXC7d41n7u7Y3nLB
      2iCpUPuyZkYAJEd68dt+W1LjYyhuUY05P41ly6+ryMpIpU7bfmjHenDV0Z3ipcoxa/pUXgc/
      Y+OuA5iYlyAbVAIIiyI7LYHf1q3jVUI67XsPIfCGLQ7PXjGwdxcqljTAz+0e7s/cOWF7i8aV
      jNm29yiiocPoST/hd/siTx444OY3gLDHl3ByDyILXRYsXlgwER88HFZE+rb9SqxsvpJX6QV5
      f6ybJ/d9Y+THyZMlK+O1jJ8yV57cPC47Tt6SyGe35PtpyyVPRH6ZOUqehKfI8JGjJC3aT4aM
      myW5eSJXTuyRJwF+0rV9P0nPzpMrhzfJftv7+fYfXD4oc3/dKyJ5smDycPGITJA1q9dKTm6u
      3Dy+XVbtPisH1y+Q/RcfiIjIpl9XS2pWrvjcvyiTFm6QB5cPyoINByUvJ106tW8niRk5cnzb
      Url4z1cmDB8oXkEREhX2XIaMnCAS5y/DZ6yQlCgfGTj6J4mJjZXbp3fL2t/Py/oFE+TiAz+R
      rBjp22e4vIpLkttXLkhCZsFhu5NGDpGIuFR5HeIuO4/Yyu5Nv0psapZE+tyXoZMWSuSzWzL8
      pxWSJyIrp4+QZ5EF59nuXDFDTtx0k7ysFBk0dKRE+dyX0T8tk9jYWDm9e638ft5RFkwYLpFp
      Iv26d5boxHQJc7eXqYs35dvwf3BZVuw8LSIi6xdMkGeRafL9oL4SHPlKnj68LUFRCfl1D65f
      IAcvP5T0Vz7SrscoyckTWfrjcPF9ESP9Bnwvadm58tLfWcZMWy6nd66QHSduiojImKF95Xno
      C4kI9pbvx/5Y6PoYNXK4SGb8e+3fEuf/QPqOnSu5eSIHNy6Qs3c9ZELfruIXkyZxIU9k2IR5
      EhsbK5cPbZYtR+1k0qghEhmfJq+CHkufETMkzv+BzFixU07uWCGHrz2SvJwM+eq1VPgAABzK
      SURBVGX1enn+Tr/fMnzUSBHJlRGD+klsSqakxIbJwBETJC3ymUxYsF6yk1/I2i37JTc7S7av
      nC5n7T1kxYzh4h8n8tEnQLdeA7CIBGPdgrwWLVpwwf4cYmiBjq4pBjnx2D9wo8u4RRD9ECtL
      azQAE2MTMjJUz+/4lxFYV66JpgZ06T8GiKdUWSv0tDUwNjEhLD2jkN+v634NaFCrWkUiQl+Q
      /CqMBQsXY5CbjGaFUgBYWlsBQm56HIsXLMDCWJs8Ue1NU86yLBpaelhYlaOYrhZFixqRnplJ
      5ItQrp1T7aRQr1GTfH/RoSEkxcdy8MABAGrUrYVfCFhbWYKOPtPG92LpvJ+Iz9BgbeMOFDdV
      rQBPEU3KmhiASW3GW9dm7wY3VixeQAULYyRPtcbIspwVGoCZqRmpaRlAwepxS2trNHQM0SuS
      R2hIMPGxERw4cADQom6tooS8qVeuYg1KFdOD6jVJDL/ywbl6u6Rp7sxpbP91KSFR8cxZtpYK
      ZYrn1ylbzhI9IyhnYYGWBhgVNSAtJhI980roa2uiX6kmGdG/QzVrLMtZA5m8CI/C9vQxABo0
      bvSe39yk6Pfbv8NXdb9GUwNq1qiFQ3gEGJbCsoQ+QZ4hJMZFv+kv1GpgwmPRxsJYH4xrYm5U
      YCM8MpK2XaujoaXL3DnTCXD68BhAOrkappgZFgFDS8gp2PMoJ1sI87zP4hVhJEdFU6pJwRYH
      H30H+H7yfDb9Mh+ddx7bFb9uisPx36nXvDUA39S15qZfGtVKf3zxc6mKNQh4Yk9QaDi/LZ7O
      7afBH60LcOnCWUJDg7B76Eftcpo8jchk8sTx6GnnkJP19sVRA0jD8aE/U6ZMwsxIh5zsv36p
      rF2tKpXrteC7Di1IT00FDU3SkpIoaVMDPc1cuvXuS+UyRcnV1M13kZMSxe5jdsxZuIwaJTQI
      iMzfFg+r4kW4/uAZT+5eYO6qndxwfMjkKVMob2ZEWs5fx/Jnqn9VH83cPHr37U+Zoppo6haM
      Z7C3Mw+e+nLp2FGqN22an29SwhTfZ08IDfbH+fEzIIdNW3YzeuocerWsgatnwAc8FUbL1Brt
      aC+e+gZy49RhLOqoLnINDQBdalQtT60mbejSpjGpKYW3ishKTyNdv8wH27/F3u4SwaGhnL5o
      xzeNVDc2gIq1v0abXHr06YeVqR6io0/lEgZccXzCvSunefNqCUD9r7/m3OlThAU/Z+ToCeRp
      aJCUEEd2bsFFLFnpJKRoUNIolbuPPXl89xKGZjZoaGiSkpRIkJcrmcUqMH7UUHLSU8nOKXi5
      +qRdITS09NDT1aJ1hy4Y6WphXqYMZuZWVK+k2jGhiJExFSzLAGBhbUNxfW1qfNWApnUrc/Hi
      Jao26UzHJrUAHapVU+2RU8y0DBYlTQCI8HfndZY2YQHPGTJuKjblK1DeVIObd53p0LUnBoaG
      VKlYjjKWFTAxMqJmFXMuX7enXpsumBc1pGpVm0L2qlWrBoBpGUt69/wOtwf2eAVFM2jwAIqa
      lEIjIZQ84wr079KMy7aX0TS2okfnlmhpaGBZoTLFihanhrUptlfsqNniO9o3rpG/q8Q3LVry
      yMGO8EQNJo4dRuM61bC9fJ0K9dpQ1bwo1apV/cB4FOwx8266TsPmNKxhie3lqxhb1aZzywZo
      aECFytWwt7+JuZEOqQbWjB3SHc03ARiYlcVUI4H7T5/z3bffUd6mCq0a1eKyrS165jUZ2qs9
      mhoFd68ylhUwMdQFrSJUq1IBAMuK1fm2fTNuXLYly6Ack0cPREsTSlpYY1Zcn5ZtWuPicJPn
      4QkMHtQfI/0i+fZM9DUIjRNGDu1VqL32mwAz4iJ4EvCa1JgwmncbQtNaKp+Vq1VD18CYpnVs
      uHTpEgalq9K1fVOat2iBy93rpOiUommdKlSpbIOOfjHadf4O4oO46+zBmImTqVixAqE+rpSw
      romJkepmZW6ij2doHONGDeP+rWtEJWsw/ccfMDQuQUZUACVqNKeMVjzO7gH07NULw6LGlCtj
      hrVNtf+tNcFOVw7hnl6W8X3a/tOh/M8wavQI9u3d/0+H8cnEBzix8oQ7634e/0+H8pf8TwlA
      QeG/jfKXYAW1RhGAglqjCEBBrVEEoKDWKAJQUGsUASioNYoAFNQaRQAKao0iAAW1RhGAglqj
      CEBBrVEEoKDWKAJQUGsUAXwpNv8Crj5fxvaZ/XDxxr+s9h5ZaeDxKTHlwK/LYclySP0f3qLi
      P0ARwJdi8+ovLICbn96ufyc4fPXv139qD4s2wsblYHv30/39H0ARwJfmqQP0Gga/LID2HWDn
      0ffruDrAgN7Q5Ts4+WbN66ldMH4K9P4ODtmCx0Po3Q1GTIDYt1uqCOzfDO3bwQ/TIDYZMmOg
      dWuYOwf6jSH/hG8HW7jjBse2w6kb8CoUJo2Gdu1h5QbIzns/riOHoUs/+K4NHHsn7iFdYd0m
      6NYFRk6CxHRIiIZJo6B1Gxg+BkJfwdYVsGyzqs2Pw+HtNjQ/DIRz9vDoDvT6DnoPABcvVdmE
      ITB7NnTsDMGv/7Ox/zt8bFcIhf8Qm2Iiu86I2J8RAZFlm0UWTxXRNBRJzC2o9zpExFhPZOF6
      keN/iBjpilx+KLJ+tgjaIlNniXj4ilQpJTJogsi54yImeiKjZ4vcPCpS3ELkwhWR3m1F+k0U
      SQtX+WvWXmTf8QI/ryJF6lQUGThRJOyFSKuaIt2HiVy1FalpLTJrbeH4c1JFyhYVOXFb5Pxu
      kSLGIq8zCvrWvKvIpXMixkVEtp4QWTVdpHZzkVu3RHbuEPEOFLn8h4hFHZH0WBEDDZHyDUUS
      Q0S0tUSeeIqY6ous2SWyZp6IWQWRtFyRRjYiFpVFlq4Ryc6TL43yBPivYAg/TYGBPSEvFZIy
      C4ru3YbMUrBkOgwYAZ0awKVLqrLKDWDTWiinBc9fwbQ50HMAtKuvKrd3AMmC39aATxg43S+w
      u3AtjBxQkC5pAcaGYGUDxdPhrhfMWwKdv4PxQ+DSxcIh370IUblgmAe6JpCbAKff+fg0eDh0
      7QmVy0FMArRoA+FuMHAY3LoHOQJtv4MkL9h7DCo0gQxf+OM0VGoGGYEQlwG2R8H2NrwOhudv
      dhYcNhEWzQZtDb40igD+K2iBFm+3WyhM6ZKQGQcvEiAvC4IjoIxqMzKKm6p+GxiDngZEhIPk
      QkS0Kt/UGCxqwO07YHcTvN4RgKnp+76030y3gSkU1YbgIFU6KATMyxaue/gIWJRWvQSv3gpl
      zeHYkXe6pKX6/bZP9VvDw8dwfB/EPoeZS0GvBHRsCsuXQfuu0LoRrFgD3buDqYlqXA6cgytX
      IewF1HnTbzOTfzminwtFAP80jTrBgG+gwVdQuxbkWMLk4aoyzTfbNhUpATPHwcieUK8uhL55
      Bxg6DjL8oG59VduNBwrsamu976tieTi4AX63g9WLYFwfaNoQDtnD6qUF9dJj4ex1WLcX7txR
      /WxZBncvQUTy+3YBTuyCeg1hyUpw84Vu36ryu3eH6Bho1w7atYXYGOjRA6o2g34toUU9+LoO
      DBqnempAgbj+CyiL4r8Uzo5gWQ0MgKe+0KIFZCaAy1No2gJ0351kAV9PSMyCBl+DliaEB8Kr
      NKhfu6COhxsUMQHNdMjThao2kJEKrq5Qygoql4fcTHB0gvpNoahu4ZgyU8HlCVStBaVM4GU4
      PA+FevXBqGDTLpJfg6sHNGkOem9EmJkCTo+hZl0I8lD1zaIkuDqDmSWUt4CocHgeCNaVofyb
      J0pqPDx6Bo2bQ2Z8wVhoAZIH7m6QqQH1vwYtDZW9UuXBsvSXmJX3UASgoNYoH4EU1BpFAApq
      jSIABbVGEYCCWqMIQEGtUQSgoNYoAlBQaxQBKKg1igAU1BpFAApqjSIABbVGEYCCWqMIQEGt
      UQSgoNZ8sgD8H92g/7hZ/NV3qA8dOvAXpUBmDH2792Ly5MlMnjiBUeMmE/E69VND+WSeOthy
      6obzJ7XZvHwa4UkfKMhM5ODJC58lroOHDv6NOH4m5p2VlPs3L2fKwvX56ZCnd+g6ZMLf8me7
      fzPOz2M+Oc60V/506dqfxKx/5hv05478wasU1RnMjraHCvXfdv9mvh85jsmTJzNqxPdsPXAO
      UI3T0/AkTu36lbGzVubXf+n7kNZ9Rn26APbt2YdhVhR3PCIAeBHiz+tk1cx4eHoS8yKE3bt3
      4xeoWr73zNUZn4DQwkbyMknSMGPr1q1s3b6D4e1rsG6HarldfMwLHO87kZ6l2ocmNzuDhw/u
      ER0dhX/IC6LDAwkMCsLDNwgQvJ8+wtPvzdI+BH/vZzxy80R1WHvhdPnq9WnyVSU83D3eBoKH
      uycA4UG+PHz8jNw/zW2Az1PSssH/uR+xryJ48NCVnDwh0P0Buw4c50VMAnm5Wbg8uEfoi4KL
      KsjXA2//UHy8vcnNTMb3eQDOzo/IyhVehgfh4HCPxLRMXkeHs2v3Hrz9Qz7QH3gVGcLjZ94E
      +HiS+c7GDSEBPty4dpnXGarMU6fPEx4Zkj9mzg/uERqlisfdwz1/fDw83KnfuguVzIvh99yP
      2KgwnFzc8vsd8yIE5yceBPt7k/an877PHN6HeWlDDp67A0Cgrwepb8QQ4ONOeo6QEh+Do+N9
      ktJVh1F7e/vg9fQxr5PSSEt8jYODA+Ev3+z2ILk8ffSQ8OhovL39Ad5r/5bUmAAcfGIoZaQ6
      W3nPwTMkBtwnIFZ1gHdUSAA9h89g69at7N23l+t7VhCZqhqnhLRswoP8uGt3hcjkHFVfTp0l
      PDLi4wI4sGUlU+asJPudCyInJQq3V1osnfo9e/b8AcCl/Vtw8VcN9IJFC8nMSCMzK4vktHTm
      /DCEK45POLx5GWv2ni9kPyk2ijt37mBvf4szV25Tp04tgp/dZfTkeQT7ezNo8PekZOcwfnA/
      XL2eM2/yCLbsv8SNU7uZsXQDIWHhrJk3kdM3nbl0eDMrd5zE7vBGNhy6itPVw8z79Y/30k8d
      L3HqhgtbfllIZHIOr3wfsOXoda4f28LSTYfwcL7JmKkLPzgeW1bNZNWmfTy6eYJJizaTlppK
      VkY6GRkpjBk8AFefANbMn8ql+15cPbyR5duOce3UHr4bOomsGH869xiMu6cfD64fZ8ayLYQG
      etOj3/dkZ6STlZVJcmrae/0JfmrPqKkLeOZ0g0t33N+LqU+X5pyzc4a8DEITtKhgqgc5qQzp
      24cnPgEsmz6O83efsXfdMgJfZ5AQ5sb6Pefz5+zXRVNZv/MI92z/YOYvewh+eoeRU37G08We
      zu3bFn7ySQ6nr7nx27qlnDu0BwHc717g+HVnkCzmzl9BYrg7Q0dPJjjYnxGDBhOdks2kod25
      ds+VEF83+g0dR3hEGGMG9CQgNoOVM8dzwcGVbavm8dOKLcQEP3uv/VsuHjtAi049AIgLfkx6
      8WqM69+JvQdP59fxfOrCnTt3uHz+DMlFLDDRKzxe/Xu047TtHSAHn+gMapkbfVwAly+cwvbs
      KRLeeezanT5MKasKBCVp4Xn9CC9Tct5rV65iDcqWtaCBjQFPY4oxb9oEVm7axp1TewvVy8nK
      IDY2hkNb12HSoA8juzXj9JEDZIsGLo/diAt5xlVbWxLNvmLS2FEsm/9TQUcGj6Zbx/ocP3Gd
      VyG+RMRnceboAYqXKI3PY0cyDK2ZPLzne+m3DOvXmVMX7Tl57CRDhg3mjz2HICeRZz7BOF0+
      R8yf7nwAZOXx47yF/Dh/FtFeXtSuXRuLClUplhKAo08kXm6PycnL5tDRkxw6foONG1cxff4K
      6lYwBuDrFu0YO3ooNpWq0ahWeTy9/AiJfEEZ6ypYlC1L47pW7/Xn8pmTTF64htE//EjP9g3f
      C6lN977cuXia5w+vUblZFwAi3B0pVqMDE0aPYNu6xew9eJTvB/fg+JlrnD12nP7DhhYYSNdl
      +qJ5zJozgyBvL84eP8zUxesY/cNUenVsXMhX0CM7EvRK8dQ9iCKvPbnn85KuA4Zx8/wJAl3s
      sGn2LXanj5CaLbi4PCY1LoRrd93QLWPDjMnjqVGtCj2/bYOftxcpSbFEvI7BySuRxTMmsWr1
      MgyAqx9o/xZ3T0+qVbUB4NiBP6hQ0Ypsw1Kc2buDNw9BkhPjCQ3wZvHKDew7cRSDPy0tbtq5
      Nw+vnyPiqT3l6rQD/uIdYNexK9y6eYWS+SoS/jh6gYY1rfD3D6JV05rsP3EFTW1NsjIzQXJI
      SX7nc7yOAZKZjAA56UmgW6yQfVOLCvTt2489R09w78h6PMJeY2Cgz7BJs9m6dStHTp6ldYNK
      ZKWpFoAnJ6fkt9XT1Qe0KWlVlY1btrJ1yyYO7fwNKVKUvQcOULdiCUaOmfBe+i3Nuw7Exe4k
      Tv4JtKhpjn4xMxasWs/WrVs5f/EEJjofGhFttLQ0QFMTjbyCzyJF9A2oWb81W7duZcu23ayc
      PR4DXU2SM3IgL5vklAwA9PVU63P3bl6FSaVGLFu1CmszvUL2/9wfQyNDkhISAUhLTXs/oqJl
      KZ4TxZ4zd+jfozUABkZGJCepbt1JiYkUK1qU+u164+VwEftnkXRsUPEdC1poaqFahJ6Xh5GR
      ISnJqkXvb3+/Zf++P/imWUP8/f1p2boVu3/fTxFja0oTw6b95xg2pC/6Bgb0HjaJrVu3cuDI
      Sb5rXiu/3852J3GLzGTG3EW0b1IL0AayyAMyU5LJgg+2zx9nnSJkZGVDXjqnrz2mckkdAkJj
      qV9Bh/P2qqdj01adGD5mIhsXjGbGvF/eGy9NvRJYFElk06Er9O/b+c2ofwSTkha8uzlFzHMn
      0ks1ZMr4saoJ6dmG5j2ncmzzDKYsmIZdRWuytIwAMNZMZ98FF0Z2/YrBw0aQm5bE5JmLP+hH
      S7cYm9bOZ8qPczm3bQ7jpszk5uESJGXr8Pvu7bSpqMmwkaORpChK1O39Tks9Jo/qzMDBw9An
      g6bdR9G6gg7TJ02glKkhbTt1o5hB4TSoBKqha0wNk1RybLqjCcya+xPThg+mhKkhRpZ12Vir
      5seGpQBDUxJ97+MaO5ym5qkMHzWGlLjXTFq4lhmzJjNxyADMS5rx8k97atZv2Ixdezfy+Hpp
      MlIyiM0SLPSy2XHU7r3+DB89hdHjf+TGYTMeuId+MIzenZqw2jYQc0PVVJpWacZXRkcZMXoM
      SfEJLP51K2gbUt9ak+iibf9yq51BY6Yy8oefuH7YHJdn4Ux7c3vMTYvhtm86d3dOQUuVwTcN
      mxOTNoth/TowYYs9my2MqDR0HGPHTuHJzcPEJWWz8/fd+bYrVK2D784VLPw5lPDgV9SOTmTs
      oDYMGDQME0MBzRJ0+4v2LZt/g6urG5o+IVRuN4ixY1XXYZfGNgxfuoMBtQvuWi16jeHAgbac
      u+f1Xh/7dmvNjH0P+dXkzYYBX3zrrf+IdPl51jwJjYiU7cumya5z9/7pgP4WR3etl5vOHuLl
      6ii9h/7wT4fzt3G9fVb2HL8soUF+0rVLd0nN/ddt/hN+WfKz+ASGys0T22Xail1/WTc3I14m
      TJ3z2WP4n98VwuuxA+eu3MGmTlMG9Ojwf+IPF6nx0fyx/yCZWkYMHfY9pU0M/+mQ/hZ5Oekc
      O7CfkFcp9B44hOoVLL6ov8ggLw4fP4exhQ3fDx2AvvZfz66HsyOlazbJ/5+gz8H/vAAUFL4k
      /xduqAoKXwxFAApqjSIABbVGEYCCWqMIQEGtUQSgoNYoAlBQaxQBKKg1nyQA76fuvPtFyYSY
      F4RHf76T/NISYrhz547q564DUTEJn832XxEe6EfCn7/8/oXw9PT4YL6/tweZ/38exfs/zScJ
      YMW02bz7FfGE2CgiouM+WzDhTx1Zu/0YsbGxvIwIYWivb3ka8vnsf4yIoP+eABYuWvDB/C0r
      FhCT9cEihS/IR78NGv8qktfpGlSy/vj3QRJiXhCRmcOpXb/in6CBv487nQeMY0CXbzi2ax23
      XP0xL1+bRXOnEO71kPU79pOSks6QH2ZQ3SCBlXvPoKlryuZ1i/MDqVSjPn379gUgxuc+Hr5B
      2BimsHDpKlIz8xgwegrtm9Ri38blPPCOxMzYkPZ9fuCp3UESUlOp27ofpXJDOXTuFobG5ixZ
      tojQJ7fZcfAMaOsxf+lK4v0eFEpHBPmhX601vq4O/LbjAGjrMX3+EjSjnnLwyn1ioyIoUbkh
      y2eN5+2XKXf9uoY4ycDPK5hvv/sWh1s3KFm1KYt/GsWNswc4fsURA+PSLFu2BBJC+XnJaooU
      L0NCuuo2f3b/Zq7c96RkuSosWTDjc8ylwr/Dx74l17ftV2Jl85W8Si/IG9Sqk8S+U8f+zC5Z
      f+iKrJ89Wg5cdZXcrCTp3LW3BDpflkGTFktMTIzs/mWm/G7rJBtWLZFXKZkS7nlHugz5UXzt
      z0j/iUsK+fS1PyNfNWwtE8aPkXbtOsi0ucslLTtPZo3oK9cf+Uh0VLh06dBN/B5flZEz14hI
      niyfOkgOXXGV0d2byaPgRMl8HSjtvxskL1/FiMPZ3TLjl99l4qBucudZgAR7PRYnd//30utn
      jxZ73yj5tl17iU/LkvgXvvJtnxHieuWQjJyzXkTyZFSPjhKeWhDr7NHd5ZprqAQ5X5ROQ6ZJ
      nuRJv87fyssXntK57xjJyRN5YndYJi3ZKnNH95eHAdGS8jpMGrXoIC887KX3qFkSExMjhzcu
      kk3Hb8mUQd0lPO0//3ajwqfx0SdAt14DsIgEY92P1SiMVQVrNHWKolckB/8Af2Iin7N161bA
      kG/MDPDJSWXO9B+xKWcKbxaUlLexec9Oq28HsXnJOE5tX8Ltl8boa2vgHxSG9qXjPAAaNWuK
      h7c/NWrXBDT4uv7XxANQkgrWxYh1dyL2dQw7tm0FoH69b2jZbyUbNq7lqXcgY2evYP7ywmkA
      8hLQ0LPEWF8H9Ksi6VGqflUsD2hQooQeqemoDr17Q3lrK4rFBlGurCUaaFCsSBEiw4OxqV4P
      LQ2oU7cegUd+x/R1FjVtSmEIVLEuSUBAALEvg9+MjwaN6xQn4O8Ns8Jn5qPvAN9Pns+mX+aj
      U2gBRQ5B/v74+/sTFBrxUaP1Gn0DuTB85GhKGQi6BkW5dPMOc+fOo3KpoqTk/OvP2/0m/Mxr
      pyPcehpMi2Z1KFGhPsMH9yExJZVWLVpw99IZgoODOXHy7QHPGqABpSvXw0QX+gwZTr1KpchG
      l7UrV9J95I8smzaEWw5O76VVI1ECY50XODz2xOHSQYpbNvgbw/c+5arX57nLFXwCgtmz53da
      ftOSFo0s2XvkKk/uXeGJXxRfNWiCVq4wbMQoLI210TL4v/F16f8f0VqyZMmSv189lXuOTnh4
      eBAUFUezhnUxLmmOZWkzLCtWxdhA9T3txi070bBaGU6eOkfZms3o0qo+jevW5NSZ81Rq3Ina
      5YpTs1ZNDIxLYvOn4zANjEtSubwFaGjRrGkDPJ6HM/aHHwhzv4eDixdDR4+mjFkJzIpqYXfb
      kWL6GljVbUd1K1Oq1q6Fro4hHVo35NzJk2QblmVIny60bNGM6+dP8yJdn1lTx9KmdfNCaT1t
      LSwrVqV/z85cv3iW6ExDFs2dShEtTYqalaa8RUkAKlatjcE7X0V/m9YxMKbq/2vv/lUIDMAo
      jB8Gm1K+MiklxYAB5RMliUW5AIuyWNyN4hr8uQVX4AqU0WCUiQxmAxODzvO7h2d6O73ZtCQp
      XwnVq5e0Wa0V5FuajgaqNjs67nc6nB/qdxuqhW01yhmt1lsls1UNu6EiESlXKL5+T8XP/eUe
      4HY5aTyZKRGkdL1HtVjOFY992PoBb/xlAMC3cAmGNQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKAtSedAgCFfIg2BgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='TD.Pred' width='192'>
      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
      QLKl+f9dvJWU5SFhOQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='TD.Predic.Re' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Table.Pred' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ToCaRa' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ToDeRa' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
